// -----------------------------------------------------------------
//	CONTRACT:  KSRGAP-KSIS-Deploy-Agent - Knational Security Intelligence Service - Knational Security Intelligence Service - Paradrop agent on target
//	Author: Caerfinon 
//	Credits:
//	{
//		Original GAP: Author - inigma
//		Original Kerbin side GAP: Author - Keniamin 
//	}
// -----------------------------------------------------------------

CONTRACT_TYPE
{
//CONTRACT DESCRIPTION
	sortKey = KSRGAP-KSIS01
	name =  KSRGAP-KSIS-Deploy-Agent
	title = Deploy a KSIS agent to counter @/deploymentReason in @/deploymentBiome.FullName()
    genericTitle = Deploy a KSIS agent to [REDACTED] in [REDACTED]	
	group = Knational Security Intelligence Service
	agent = Knational Security Intelligence Service

	description = Mister White has a job that needs doing. KSIS has received information from @/deploymentBiome.FullName() concerning @/deploymentReason that needs investigating. They require assistance in getting @/agentKerbalName to the location.
	genericDescription = Mister White has a job that needs doing...
	synopsis = Deploy a KSIS agent to a place to do a thing on a needs to know basis
	notes = This mission requires deploying a KSIS agent by paradrop to the depolyment site  
	completedMessage = Mister White thanks you for your service to the knation. 

//Contract Limits
	maxCompletions = 0
	maxSimultaneous = 1
	autoAccept = false
	declinable = true
	cancellable = true
	minExpiry = 1.0
	maxExpiry = 1.0
	deadline = 0

//Contract Reward Modifiers
	prestige = Significant
	targetBody = Kerbin
	
//Contract Rewards
	advanceFunds = (@/rewardFunds * 0.25 )
	rewardFunds = @KSRGAP:rewardBaseValue * 4 * Random(1.0,1.15)
	rewardReputation = 1.0
	rewardScience = 0.0

//Contract Penalties
	failureFunds =  (@/rewardFunds * 1.15) * Random(1.0, 1.25)
	failureReputation = 5.0
	

// REQUIREMENTS FOR CONTRACT TO APPEAR

// Requires that inital KSIS mission completed
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		minCount = 1
		contractType = KSRGAP-KSIS-Mr-White
	}

//After Disaster Relief mission is complete wait 30 days before offering another	
	REQUIREMENT
	{
		title = Cool down timer 7 days
		name = CompleteContract
		type = CompleteContract
		minCount = 0
		contractType = KSRGAP-KSIS-Deploy-Agent
		cooldownDuration = 7d
	}

//DATA NODES TO PROCESS FOR CONTRACT USE
//Contract Specific VesselParameterGroup Definition Key (to prevent conflict with other active contracts)
	DATA
	{
		type = string
		craft = KSRGAPDeployagentPlane
		craftEVA = KSRGAPDeployagentEVA
	}

	DATA
	{
		type = Waypoint
		hidden = true
		deploymentWaypoint = @/DeploymentWaypointGenerator.Waypoints().ElementAt(0)
	}

	DATA
	{
		type = Location
		hidden = true
		deploymentLocation = @/deploymentWaypoint.Location()
	}
	
	DATA
	{
		type = Biome
		hidden = true
		deploymentBiome = @/deploymentLocation.Biome()
	}
	
	DATA
	{
		type = List<string>
		hidden = true
		deploymentReasons = ["political extremism","violent crime syndicates","terrorist activity","drug cartel operations","sectarian vilolence"]
	}
	
	DATA
	{
		type = String
		hidden = true
		deploymentReason = @/deploymentReasons.Random()
	}
	
//Rank List
	DATA
	{
		type = List<string>
		
		agentTitleList = [ "Operative " , "Agent " , "Field Agent ", "Special Agent "]
		
	} 

// Randomly select 0 (male) or 1 (female)
	DATA
	{
		type = int
		genderType = Random(0,1)
	}

Greate a bool for gender	
	DATA
    {
        type = bool
        isFemale = @/genderType == 1
    }

	DATA
	{
		type = string
		
		agentTitle = @/agentTitleList.Random()
		agentKerbalName = @/agentTitle + RandomKerbalName(@/isFemale ? Female : Male)
		agentPronoun = @/isFemale ? "her" : "him"
		hidden = true
		
	}	
	
		
	DATA
	{
		type = List<Kerbal>
		
		kerbalAgent = [ NewKerbal( @/isFemale ? Female : Male, @/agentKerbalName, "ServiceKerbal"  ) ]
		
		hidden = true
		
	}
	

//BEHAVIOURS TO DO WHEN CREATING CONTRACT
	
	//Kerbals to remove 
	BEHAVIOUR
	{
		name = RemoveKerbal
		type = RemoveKerbal
		kerbal = @/kerbalAgent.ElementAt(0)
	}

    //Spawn the Agent
	BEHAVIOUR
	{
		name = SpawnPassengers
		type = SpawnPassengers
		
		kerbal = @/kerbalAgent.ElementAt(0)
		kerbalType = Unowned
	}


// Waypoint to determine disaster zone
	BEHAVIOUR
	{
        name = DeploymentWaypointGenerator
        type = WaypointGenerator
		
		RANDOM_WAYPOINT
		{
			name = Deployment Zone
			targetBody = @/targetBody
			icon = ContractPacks/KerbinSideRemasteredGAP/Assets/Icons/ParaDrop
			altitude = 0.0
			waterAllowed = false
		}
    }
	
//Contract Dialogs	
	BEHAVIOUR
	{
		name = DialogBox
		type = DialogBox

		DIALOG_BOX
		{
			condition = PARAMETER_COMPLETED
			parameter = RequestTakeoffLaunch
			position = CENTER
			
			TEXT
			{
				text = Firstly, I want to thank you on behalf of the knation for undertaking this little assignment, we are a little short on aircraft and appreciate the assist. &br;&br;I also need to mention that it goes without saying, that should you or any of your team be caught or killed, the Secretary General and KSIS will disavow any knowledge of your actions. &br;&br;Now have a nice flight. I'll be in touch. 
				fontSize = 20
				textColor = #BADA55
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredGAP/Assets/Characters/KSIS_MrWhite
				characterName = Mister White
			}
			
		}
		
		DIALOG_BOX
		{
			condition = PARAMETER_COMPLETED
			parameter = NearTarget
			
			position = CENTER
			title = <b>Get ready to Jump</b>
			textColor = #BADA55
			
			TEXT
			{
				text = <color=#BADA55>You are approaching the target. Get ready to jump and land as close as you can to the objective. Good Hunting. &br;&br;You should then land your aircraft at some nearby base to give time for the agent to complete their mission. Then check in and "recover" them</color>    
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredGAP/Assets/Characters/KSIS_MrWhite
				characterName = Mister White
			}
			
		}
	
		DIALOG_BOX
		{
			condition = PARAMETER_COMPLETED
			parameter = DeploymentComplete
			
			position = CENTER
			title = <b>Wonderful News</b>
			textColor = #BADA55
			
			TEXT
			{
				text = <color=#BADA55>Excellent. You have done well. I thank you and the knation thanks you. Our buisiness today is concluded.</color>    
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredGAP/Assets/Characters/KSIS_MrWhite
				characterName = Mister White
			}
			
		}		
		
		DIALOG_BOX
		{
			condition = CONTRACT_FAILED
			
			position = CENTER
			title = <b>Sometimes Things Go Wrong</b>
			titleColor = #B00B1E
			
			TEXT
			{
				text = <color=#B00B1E>Well... this is most disappointing.</color>    
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredGAP/Assets/Characters/KSIS_MrWhite
				characterName = Mister White
			}
			
		}		

	}

//PARAMETERS FOR CONTRACT COMPLETION
	PARAMETER
	{
		name = LaunchSite
		type = VesselParameterGroup
		title = Your aircraft must meet mission requirements and goals
		define = @/craft
		dissassociateVesselsOnContractCompletion = true
		completeInSequence = true
		disableOnStateChange = true

		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			title = have a certified pilot
			trait = Pilot
			minCrew = 1
			disableOnStateChange = false
			hideChildren = true

		}
		
		//Passenger Manifest - Load the KSIS agent
		PARAMETER
		{
			name = All
			type = All
			
			title = ensure @/agentKerbalName is on board
			
			PARAMETER
			{
				name = HasPassengers
				type = HasPassengers
				title = @kerbal.First()
				hideChildren = true
		
				ITERATOR
				{
					type = Kerbal
					kerbal = @/kerbalAgent
				}
			}
		}
	}
	
//Launch Site
	PARAMETER
	{
		name = LaunchSite
		type = VesselParameterGroup
		title = begin at the KSC Runway
		vessel = @/craft
		completeInSequence = true
		disableOnStateChange = true
		hideVesselName = true
		
		PARAMETER
		{
			name = VisitWaypoint
			type = VisitWaypoint
			index = 4
			distance = 1600
			hideOnCompletion = false
			completeInSequence = true
			disableOnStateChange = false
			hideChildren = true
		}
	    PARAMETER
	    {
		    name = RequestTakeoffLaunch
		    type = Duration
		    duration = 5s
		    preWaitText = request clearance for takeoff:
		    waitingText = requesting clearance for takeoff: 
		    completionText = be cleared for takeoff
		    completeInSequence = true
		    disableOnStateChange = true
	    }		

	}
	


//Navigate to waypoint requirement include landing to a complete stop

	PARAMETER
	{
		name = NearTarget
		type = VisitWaypoint
		title = Fly to the deployment zone in @/deploymentBiome.FullName()
		index = 0
		distance = 10000
		completeInSequence = true
		disableOnStateChange = false
		targetBody = @/targetBody
	}				
	
//ParaDrop
	PARAMETER
	{
		name = VesselParameterGroup
		type = VesselParameterGroup
		title = exit @/agentKerbalName from the airplane
		define = @/craftEVA
		dissassociateVesselsOnContractCompletion = true
		completeInSequence = true
		disableOnStateChange = true
		hideChildren = true	
		
		PARAMETER
		{
			name = VesselIsType
			type = VesselIsType
			vesselType = EVA
			hideChildren = true
		}
		
		PARAMETER
		{
			name = IsNotVessel
			type = IsNotVessel		
			vessel = @/craft
			hideChildren = true
		}
	}
	
//ParaDrop - Landing
	PARAMETER
	{
		name = DeploymentComplete
		type = VesselParameterGroup
		title = and land @/agentPronoun safely on target
		notes = within 500 meters of the marker
		vessel = @/craftEVA
		completeInSequence = true
		disableOnStateChange = true
		
		PARAMETER
		{
			name = ReachState
			type = ReachState
			targetBody = Kerbin
			situation = LANDED
			hideChildren = true
		}
		
		PARAMETER
		{
			name = VesselIsType
			type = VesselIsType
			vesselType = EVA
			hideChildren = true
		}
		
		PARAMETER
		{
			name = IsNotVessel
			type = IsNotVessel
			vessel = @/craft
			hideChildren = true
		}

		PARAMETER
		{
			name = KerbalDeaths
			type = KerbalDeaths
			title = without serious injury
			kerbal = @/kerbalAgent.ElementAt(0)
			hideChildren = true	
		}
		PARAMETER
		{
			name = VisitWaypoint
			type = VisitWaypoint
			index = 0
			distance = 500
			showMessages = true
			hideOnCompletion = true
			disableOnStateChange = false
			targetBody = @/targetBody
		}
	}
	PARAMETER
	{
		name = RecoverKerbal
		type = RecoverKerbal
		title = Recover @/agentKerbalName
		hideChildren = true
		kerbal = @/kerbalAgent.ElementAt(0)
	}
}



	



	
