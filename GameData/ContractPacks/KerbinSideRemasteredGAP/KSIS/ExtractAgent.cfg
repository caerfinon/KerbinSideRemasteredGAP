// -----------------------------------------------------------------
//	CONTRACT:  KSRGAP-KSIS-Extract-Agent - Knational Security Intelligence Service - Knational Security Intelligence Service - retrieve agent and deliver to Area 15
//	Author: Caerfinon 
//	Credits:
//	{
//		Original GAP: Author - inigma
//		Original Kerbin side GAP: Author - Keniamin 
//	}
// -----------------------------------------------------------------

CONTRACT_TYPE
{
//CONTRACT DESCRIPTION
	sortKey = KSRGAP-KSIS02
	name =  KSRGAP-KSIS-Extract-Agent
	title = Extract a KSIS agent located in @/extractionBiome.FullName() 
    genericTitle = Extract a KSIS agent from [REDACTED] becasue [REDACTED]	
	group = Knational Security Intelligence Service
	agent = Knational Security Intelligence Service

	description = Mister White has a job that needs doing. A KSIS agent in @/extractionBiome.FullName() needs to be extracted because @/extractionReason They require assistance extracting @/agentKerbalName from the location.
	genericDescription = Mister White has a job that needs doing...
	synopsis = Extract a KSIS agent from a place and return them to Area 15
	notes = This mission requires retrieval of a KSIS agent and then returning to Area 15 by any means necessary.  
	completedMessage = Mister White thanks you for your service to the knation. 

//Contract Limits
	maxCompletions = 0
	maxSimultaneous = 1
	autoAccept = false
	declinable = true
	cancellable = true
	minExpiry = 1.0
	maxExpiry = 1.0
	deadline = 0

//Contract Reward Modifiers
	prestige = Significant
	targetBody = Kerbin
	
//Contract Rewards
	advanceFunds = (@/rewardFunds * 0.25 )
	rewardFunds = @KSRGAP:rewardBaseValue * 5 * Random(1.0,1.15)
	rewardReputation = 2.0
	rewardScience = 0.0

//Contract Penalties
	failureFunds =  (@/rewardFunds * 1.15) * Random(1.0, 1.25)
	failureReputation = 6.0
	

// REQUIREMENTS FOR CONTRACT TO APPEAR

// Requires that inital KSIS mission completed
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		minCount = 1
		contractType = KSRGAP-KSIS-Mr-White
	}
// must have previous agent deployment experience	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		minCount = 1
		contractType = KSRGAP-KSIS-Deploy-Agent
	}

//After Disaster Relief mission is complete wait 30 days before offering another	
	REQUIREMENT
	{
		title = Cool down timer 7 days
		name = CompleteContract
		type = CompleteContract
		minCount = 0
		contractType = KSRGAP-KSIS-Extract-Agent
		cooldownDuration = 7d
	}

//DATA NODES TO PROCESS FOR CONTRACT USE
//Contract Specific VesselParameterGroup Definition Key (to prevent conflict with other active contracts)
	DATA
	{
		type = string
		craft = KSRGAPExtraction
	}
	DATA
	{
		type = double
		altAdjust = @KSRGAP:siteALT.ElementAt(21)
	}
	DATA
	{
		type = Waypoint
		hidden = true
		extractionWaypoint = @/extractionZone.Waypoints().ElementAt(0)
	}
	
	DATA
	{
		type = double
		extractionLat = @/extractionWaypoint.Latitude()
		extractionLon = @/extractionWaypoint.Longitude()
	}	

	DATA
	{
		type = Location
		hidden = true
		extractionLocation = @/extractionWaypoint.Location()
	}
	
	DATA
	{
		type = Biome
		hidden = true
		extractionBiome = @/extractionLocation.Biome()
	}
	
	DATA
	{
		type = List<string>
		hidden = true
		extractionReasons = ["they have vital intelligense that needs to be retrieved.","their cover has been blown.","their mission has concluded.","local agitators have discovered thsir safe house.","reasons..."]
	}
	
	DATA
	{
		type = String
		hidden = true
		extractionReason = @/extractionReasons.Random()
	}
	
//Rank List
	DATA
	{
		type = List<string>
		
		agentTitleList = [ "Operative " , "Agent " , "Field Agent ", "Special Agent "]
		
	} 

// Randomly select 0 (male) or 1 (female)
	DATA
	{
		type = int
		genderType = Random(0,1)
	}

Greate a bool for gender	
	DATA
    {
        type = bool
        isFemale = @/genderType == 1
    }

	DATA
	{
		type = string
		
		agentTitle = @/agentTitleList.Random()
		agentKerbalName = @/agentTitle + RandomKerbalName(@/isFemale ? Female : Male)
		agentPronoun = @/isFemale ? "her" : "him"
		hidden = true
		
	}	
	
		
	DATA
	{
		type = List<Kerbal>
		
		kerbalAgent = [ NewKerbal( @/isFemale ? Female : Male, @/agentKerbalName, "ServiceKerbal"  ) ]
		
		hidden = true
		
	}
	


//BEHAVIOURS TO DO WHEN CREATING CONTRACT
	
	//Kerbals to remove 
	BEHAVIOUR
	{
		name = RemoveKerbal
		type = RemoveKerbal
		kerbal = @/kerbalAgent.ElementAt(0)
	}

    //Spawn Kerbal to be rescued 
	BEHAVIOUR
	{
		name = SpawnKerbal
		type = SpawnKerbal

		KERBAL
		{
			kerbal = @/kerbalAgent.ElementAt(0)
			kerbalType = Unowned
			owned = false
			addToRoster = false
			lat = @/extractionLat
			lon = @/extractionLon
			heading = 300

		}
	}


// Waypoint to determine disaster zone
	BEHAVIOUR
	{
        name = extractionZone
        type = WaypointGenerator
		
		RANDOM_WAYPOINT
		{
			name = Extraction Zone
			targetBody = @/targetBody
			icon = ContractPacks/KerbinSideRemasteredGAP/Assets/Icons/spy
			altitude = 0.0
			waterAllowed = false
		}
		
		WAYPOINT
		{
			name = Top Secret Area 15
			icon = ContractPacks/KerbinSideRemasteredGAP/Assets/Icons/Airport
			altitude = 133
			latitude = @KSRGAP:tsa15RunwayLAT
			longitude = @KSRGAP:tsa15RunwayLON
			
		}
		
		WAYPOINT
		{
			name = TSA 15 Air Terminal
			icon = ContractPacks/KerbinSideRemasteredGAP/Assets/Icons/terminal
			altitude = 133
			latitude = @KSRGAP:tsa15TerminalLAT
			longitude = @KSRGAP:tsa15TerminalLON
			parameter = RequestLandingSite2
			
		}		
		
		
    }
	
//Contract Dialogs	
	BEHAVIOUR
	{
		name = DialogBox
		type = DialogBox
	
		DIALOG_BOX
		{
			condition = PARAMETER_COMPLETED
			parameter = extractionComplete
			
			position = CENTER
			title = <b>Wonderful News</b>
			textColor = #BADA55
			
			TEXT
			{
				text = <color=#BADA55>Excellent. You have done well. Now bring the agent home to Area 15.</color>    
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredGAP/Assets/Characters/KSIS_MrWhite
				characterName = Mister White
			}
			
		}		
		
		DIALOG_BOX
		{
			condition = PARAMETER_COMPLETED
			parameter = RequestLandingSite2
			
			position = CENTER
			
			TEXT
			{
				text = We have you on approach. You are cleared for landing. Deliver your passenger to the terminal. Directions have been transmited to you.
				fontSize = 20
				textColor = #BADA55
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredGAP/Assets/Characters/KSIS_MrWhite
				characterName = Mister White
			}
			
		}
		
		DIALOG_BOX
		{
			condition = PARAMETER_COMPLETED
			parameter = SafeAtHome
			
			position = CENTER
			title = <b>Wonderful News</b>
			textColor = #BADA55
			
			TEXT
			{
				text = <color=#BADA55>Excellent. You have done well. I thank you and the knation thanks you. Our buisiness today is concluded once the agent has been recoverd.</color>    
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredGAP/Assets/Characters/KSIS_MrWhite
				characterName = Mister White
			}
			
		}		
		
		DIALOG_BOX
		{
			condition = CONTRACT_FAILED
			
			position = CENTER
			title = <b>Sometimes Things Go Wrong</b>
			titleColor = #B00B1E
			
			TEXT
			{
				text = <color=#B00B1E>Well... this is most disappointing.</color>    
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredGAP/Assets/Characters/KSIS_MrWhite
				characterName = Mister White
			}
			
		}		

	}

//PARAMETERS FOR CONTRACT COMPLETION


//Extraction site
	PARAMETER
	{
		name = extractionComplete
		type = All
		title = Pick up @/agentKerbalName at extraction site
		completeInSequence = true
		disableOnStateChange = true
		
		PARAMETER
		{
			name = ReachState
			type = ReachState
			targetBody = Kerbin
			situation = LANDED
			hideChildren = true
			disableOnStateChange = false
			completeInSequence = true
		}
		
		PARAMETER
		{
			name = VisitWaypoint
			type = VisitWaypoint
			index = 0
			distance = 50
			showMessages = true
			hideOnCompletion = true
			completeInSequence = true
			disableOnStateChange = false
			hideChildren = true
			targetBody = @/targetBody
		}

		PARAMETER
		{
			name = ExtractedAgent
			type = All
			title = extract @/agentKerbalName
			hideChildren = true
			completeInSequence = true
			PARAMETER
			{
				name = HasCrew
				type = HasCrew
				minCrew = 2
				disableOnStateChange = false
				hidden = true
			}
			
			PARAMETER
			{
				name = HasCrew
				type = HasCrew
				kerbal = @/kerbalAgent.ElementAt(0)
				disableOnStateChange = false
			}
		}
	}
	
// -----------------------------------------------------------------	
// Trip to Site2
// -----------------------------------------------------------------

	PARAMETER
	{
		name = RequestLandingSite2
		type = VesselParameterGroup
		define = @/craft
		dissassociateVesselsOnContractCompletion = true
		completeInSequence = true
		disableOnStateChange = true
		hideChildren = true
		hidden = true
		
		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			kerbal = @/kerbalAgent.ElementAt(0)
			disableOnStateChange = false
			hideChildren = true
			hidden = true
		}
		
		PARAMETER
		{
			name = VisitWaypoint
			type = VisitWaypoint
			index = 1
			distance = 19000
			hideOnCompletion = true
			completeInSequence = true
			disableOnStateChange = false
			hideChildren = true
			hidden = true
		}
	}

	PARAMETER
	{
		name = LandingSite2
		type = VesselParameterGroup
		title = return @/agentKerbalName to Top Secret Area 15
		notes = land and move to within 50 meters of the terminal
		vessel = @/craft
		disableOnStateChange = true
		hideVesselName = true
		completeInSequence = true

		PARAMETER
		{
			name = Site2Terminal
			type = VisitWaypoint
			title = then taxi to the terminal
			index = 2
			distance = 50
			horizontalDistance = 50
			showMessages =  true
			disableOnStateChange = false
		}
		
		PARAMETER
		{
			name = ReachState
			type = ReachState
			title = and stop your aricraft
			targetBody = Kerbin
			situation = LANDED
			maxSpeed = 0.0
			disableOnStateChange = false
			hideChildren = true
		}	


	}	
	
	PARAMETER
	{
		name = SafeAtHome
		type = VesselParameterGroup
		vessel = @/craft
		title = safely
		completeInSequence = true
		disableOnStateChange = true
		
		PARAMETER
		{
			name = KerbalDeaths
			type = KerbalDeaths
			title = without killing @/agentKerbalName
			kerbal = @/kerbalAgent.ElementAt(0)
		}
	}
	
	PARAMETER
	{
		name = RecoverKerbal
		type = RecoverKerbal
		title = Recover @/agentKerbalName
		notes = the agent can EVA from the aircraft and be recovered allowing the aircraft to be recovered seperately at another location
		hideChildren = true
		kerbal = @/kerbalAgent.ElementAt(0)
	}
}



	



	