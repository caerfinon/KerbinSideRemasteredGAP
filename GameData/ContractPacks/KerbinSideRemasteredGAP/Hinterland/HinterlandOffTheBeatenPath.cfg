// -----------------------------------------------------------------
//	CONTRACT:  KSRGAP-Hinterland-Off-The-Beaten-Path - Kerbin Side Hinterland Tours - Crew: 1 Passengers: 3
//	Author: Caerfinon 
//	Credits:
//	{
//		Original GAP: Author - inigma
//		Original Kerbin side GAP: Author - Keniamin 
//		Based on Contract HardSciene.cfg from "Field Research" - Author: nightingale
//	}
// -----------------------------------------------------------------

// DRAFT
CONTRACT_TYPE:NEEDS[KerbinSideRemasteredGapExtras]
{
	sortKey = KSRGAP-Hinterland3
	name = KSRGAP-Hinterland-Off-The-Beaten-Path
	title = Hinterland Off The Beaten Path
	group = Kerbin Side Hinterland Tours
	agent = Kerbin Side Hinterland Tours

	description = A new charter has been received to take three important travellers to the remote airstrip at @KSRGAP:stripName.ElementAt(@/dstSite) to @/tourPurpose You will be accompanied by @/kerbalsPassengers.ElementAt(3) from the Kerbin Geographic Organization (KGO) who will act as the party's guide. Leave from the KSC and travel to @KSRGAP:siteName.ElementAt(@/srcSite) to pick up your passengers from the terminal, then fly to the destination and make a landing, Then return to @KSRGAP:siteName.ElementAt(@/srcSite) and recover your passengers.  
	genericDescription = A new charter has been received to take travellers on a unique hinterland adventure. Leave from the KSC, travel to the your passenger's location and embark them, then fly to the destination and make a landing, Then return to the passenger's original airport and recover your passengers.  
	synopsis = Take passengers on a charter flight into one of Kerbin's truely unique hinterland locations.
	completedMessage = Hinterland charter is completed! See you next time, adventure is just a flight away.

//Contract Limits
	maxCompletions = 0
	maxSimultaneous = 1
	autoAccept = false
	declinable = true
	cancellable = true
	minExpiry = 1.0
	maxExpiry = 1.0
	deadline = 0

//Contract Reward Modifiers
    prestige = Exceptional
	targetBody = Kerbin
	
//Contract Rewards
	rewardFunds = @KSRGAP:rewardBaseValue * 3 * Random(1.0,1.15)
	advanceFunds = (@/rewardFunds * 0.25 )
	rewardReputation = 1
    rewardScience = 5

//Contract Penalties
	failureFunds =  (@/rewardFunds * 1.15) * Random(1.0, 1.25)  
	failureReputation = 10
	
// REQUIREMENTS FOR CONTRACT TO APPEAR

//Must have completed Hinterland-Adventure-Tour
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = KSRGAP-Hinterland-Adventure-Tour
		minCount = 1
	}
	
//After mission is complete wait 1 day before offering it again	
	REQUIREMENT
	{
		title = Cool down timer 12 day
		name = CompleteContract
		type = CompleteContract
		minCount = 0
		contractType = KSRGAP-Hinterland-Off-The-Beaten-Path
		cooldownDuration = 12d
	}

//DATA NODES TO PROCESS FOR CONTRACT USE
//Contract Specific VesselParameterGroup Definition Key (to prevent conflict with other active contracts)
	DATA
	{
		type = string
		craft = KSRGAP-Hinterland-Off-The-Beaten-Path
		
	}
	
	DATA
	{
		type = List<string>
		tourPurposeData = ["escape the crowds to enjoy a true seclusion.", "see breathtaking landscapes few have ever seen.", "do unique, off-the-grid experiences and exploration.", "visit high-end sustainable lodges in pristine environments.", "have close up access to rare and exotic species.", "experince one-of-a-kind adventures that stand out from typical luxury travel."]
		hidden = true
	}
	
	DATA
	{
		type = string
		tourPurpose = @/tourPurposeData.Random()
		hidden = true
	}	
	
	
//List of Possible ATC genders
	DATA
	{
		type = List<string>
		ATCGender = ["M" ,"F"]
		hidden = true
	}
	
// Merge random gender to Group siteATC type to select dialog image
	DATA
	{
		type = string
		site1ATCImage = @KSRGAP:siteATC.ElementAt(0) + @/ATCGender.Random()
		hidden = true
		
	}
	
	DATA
	{
		type = string
		site2ATCImage = @KSRGAP:siteATC.ElementAt(@/srcSite) + @/ATCGender.Random()
		hidden = true
		
	}

//Define Kerbals 

	DATA
	{
		type = List<Kerbal>
		Citizens = [ NewKerbalWithTrait("Citizen"),NewKerbalWithTrait("Citizen"),NewKerbalWithTrait("Citizen"),NewKerbalWithTrait("Scientist") ]
		hidden = true 
		
	}


	DATA
	{
		type = List<Kerbal>
		kerbalsPassengers = @Citizens
		hidden = true
		
	}
	
// Pick a destination Airstrip location
	DATA
	{
		type = int
		dstSite = Random(0,19)
		hidden = true
	}
	
// Pic the regional location for the VIK 

    DATA
	{
		type = List<string>
		sitecodetypes = ["A" ,"B"]
		hidden = true
	}
	
	DATA
	{
		type = string
		sitecode = @/sitecodetypes.Random()
		hidden = true
	}
	
	DATA
	{
		type = bool
		isA = @/sitecode == "A" 
	}
	
	
	DATA
	{
		type = int
		srcSite =  @/isA ? @KSRGAP:stripRegionalA.ElementAt(@/dstSite) : @KSRGAP:stripRegionalB.ElementAt(@/dstSite)
		hidden = true
    }

//Text for name= in Air Terminals at source site
	DATA
	{
		type = string
		nameTerminalSrc = @KSRGAP:siteName.ElementAt(@/srcSite) + " Air Terminal"
		hidden = true
	}


// -----------------------------------------------------------------
//BEHAVIOURS TO DO WHEN CREATING CONTRACT
// -----------------------------------------------------------------

	//Kerbals to remove 
	BEHAVIOUR
	{
		name = RemoveKerbal
		type = RemoveKerbal
		kerbal = @/kerbalsPassengers
	}

	// Spawn scientist
	BEHAVIOUR
	{
		name = SpawnPassengers
		type = SpawnPassengers
		kerbal = @/kerbalsPassengers.ElementAt(3)
		kerbalType = Unowned
		removePassengers = true
    }		
	
	// spawn Kerbals at pickup location
	BEHAVIOUR
	{
		name = SpawnKerbal
		type = SpawnKerbal
		
		KERBAL
		{
			kerbal = @/kerbalsPassengers.ElementAt(0)
			kerbalType = Unowned
			owned = false
			addToRoster = false
			lat = @KSRGAP:siteVikTerminalLAT.ElementAt(@/srcSite) + (Random(-99,99) / 100000)
			lon = @KSRGAP:siteVikTerminalLON.ElementAt(@/srcSite) + (Random(-99,99) / 100000)
			heading = Random(0,359)
		}
		KERBAL
		{
			kerbal = @/kerbalsPassengers.ElementAt(1)
			kerbalType = Unowned
			owned = false
			addToRoster = false
			lat = @KSRGAP:siteVikTerminalLAT.ElementAt(@/srcSite) + (Random(-99,99) / 100000)
			lon = @KSRGAP:siteVikTerminalLON.ElementAt(@/srcSite) + (Random(-99,99) / 100000)
			heading = Random(0,359)
			
		}
		KERBAL
		{
			kerbal = @/kerbalsPassengers.ElementAt(2)
			kerbalType = Unowned
			owned = false
			addToRoster = false
			lat = @KSRGAP:siteVikTerminalLAT.ElementAt(@/srcSite) + (Random(-99,99) / 100000)
			lon = @KSRGAP:siteVikTerminalLON.ElementAt(@/srcSite) + (Random(-99,99) / 100000)
			heading = Random(0,359)
		}
	}

// Waypoint to determine tour destination
	BEHAVIOUR
	{
        name = WaypointGenerator
        type = WaypointGenerator
		// 0
		WAYPOINT
		{
			name = @KSRGAP:siteName.ElementAt(@/srcSite) 
			targetBody = @/targetBody
			icon = ContractPacks/KerbinSideRemasteredGAP/Assets/Icons/Airport
			latitude = @KSRGAP:siteLAT.ElementAt(@/srcSite)
			longitude = @KSRGAP:siteLON.ElementAt(@/srcSite)
			altitude = 0
		}
		// 1
		WAYPOINT
		{
			name = name = @/nameTerminalSrc
			icon = ContractPacks/KerbinSideRemasteredGAP/Assets/Icons/terminal
			targetBody = @/targetBody
			latitude = @KSRGAP:siteVikTerminalLAT.ElementAt(@/srcSite)
			longitude = @KSRGAP:siteVikTerminalLON.ElementAt(@/srcSite)
			parameter = RequestLandingSite2
			altitude = 0
		}
		// 2
		// Destination Airstrip
		WAYPOINT
		{
			name = @KSRGAP:stripName.ElementAt(@/dstSite) 
			targetBody = @/targetBody
			icon = ContractPacks/KerbinSideRemasteredGAP/Assets/Icons/Airstrip
			latitude = @KSRGAP:stripLAT.ElementAt(@/dstSite)
			longitude = @KSRGAP:stripLON.ElementAt(@/dstSite)
			altitude = 0
		}
						
		//3
		WAYPOINT
		{
			name = KSC Runway
			hidden = true
			latitude = @KSRGAP:kscRunwayLAT
			longitude = @KSRGAP:kscRunwayLON
			altitude = 0
		}
	
    }


// Mission Dialog boxes
	BEHAVIOUR
	{
		name = DialogBox
		type = DialogBox

		DIALOG_BOX
		{
			condition = PARAMETER_COMPLETED
			parameter = LaunchSite
			position = CENTER
			
			TEXT
			{
				text = ATC: Hinterland One, you are cleared for depature and immediate take off. Fly safe.
				fontSize = 20
				textColor = #BADA55
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredGAP/Assets/Characters/@/site1ATCImage
				characterName = KSC Air Traffic Control
			}
			
		}
		
		DIALOG_BOX
		{
			condition = PARAMETER_COMPLETED 
			parameter = RequestLandingSite2
			
			position = CENTER
			
			TEXT
			{
				text = ATC: Hinterland One, we have you on approach. You are cleared for landing. On touchdown proceed to the indicated airport terminal. Directions have been transmited to you.
				fontSize = 20
				textColor = #BADA55
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredGAP/Assets/Characters/@/site2ATCImage
				characterName = Local Air Traffic Control
			}
		}

		DIALOG_BOX
		{
			condition = PARAMETER_COMPLETED
			parameter = RequestTakeoffSite2
			
			position = CENTER
			
			TEXT
			{
				text = ATC: Hinterland One, you are cleared for departure. Please proceed to the runway for immediate takeoff  
				fontSize = 20
				textColor = #BADA55
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredGAP/Assets/Characters/@/site2ATCImage
				characterName = Local Air Traffic Control
			}
			
		}

		DIALOG_BOX
		{
			condition = PARAMETER_COMPLETED
			parameter = RequestLandingSiteR2
			
			position = CENTER
			
			TEXT
			{
				text = ATC: Hinterland One, welcome back. We have you on approach. You are cleared for landing. On touchdown proceed to the indicated airport terminal. Directions have been transmited to you.
				fontSize = 20
				textColor = #BADA55
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredGAP/Assets/Characters/@/site2ATCImage
				characterName = Local Air Traffic Control
			}
		}

//------------------------------------------------------------------------
// Mission completed dialog	
//------------------------------------------------------------------------		
		DIALOG_BOX
		{
			condition = PARAMETER_COMPLETED
			parameter = MissionAccomplished
			
			position = CENTER
			
			TEXT
			{
				text = ATC: Hinterland One, welcome to your destination. I trust your trip was enjoyable.   
				textColor = #BADA55
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredGAP/Assets/Characters/@/site2ATCImage
				characterName = Local Air Traffic Control
			}
		}

//------------------------------------------------------------------------
// failed misssion dialog
//------------------------------------------------------------------------
		DIALOG_BOX
		{
			condition = CONTRACT_FAILED
			
			position = CENTER
			title = <b>Sometimes Things Go Wrong</b>
			titleColor = #FF0000
			
			TEXT
			{
				text = ATC: Hinterland One, Are you there? please respond. Hinterland One, we've lost you on radar, do you copy? Are you declaring an emergency?.... and you were doing so well.
				fontSize = 20
				textColor = #FF0000				
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredGAP/Assets/Characters/@/site2ATCImage
				characterName = Local Air Traffic Control
			}
			BREAK
			{
			}
			TEXT
			{
				text = Start recovery operations immediately of your aircraft and the remaining passengers and crew. The KAA will be launching an investigation into this tragedy.
				fontSize = 20
				textColor = #B00B1E
			}
		}
		
	}

// -----------------------------------------------------------------
//PARAMETERS FOR CONTRACT COMPLETION
// -----------------------------------------------------------------
//Craft definition
// -----------------------------------------------------------------

	PARAMETER
	{
		name = Initialization
		type = VesselParameterGroup
		title = Your aircraft must meet all requirements
		define = @/craft
		completeInSequence = true
		dissassociateVesselsOnContractCompletion = true


		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			title = have a certified pilot
			trait = Pilot
			minCrew = 1
			disableOnStateChange = false
			hideChildren = true
		}
		PARAMETER
		{
			name = HasPassengers
			type = HasPassengers
			hideChildren = true
			kerbal = @/kerbalsPassengers.ElementAt(3)
		}
	}

// -----------------------------------------------------------------
//Launch Site
// -----------------------------------------------------------------
	PARAMETER
	{
		name = LaunchSite
		type = VesselParameterGroup
		title = begin at the KSC Runway
		vessel = @/craft
		completeInSequence = true
		disableOnStateChange = true
		hideVesselName = true
		
		PARAMETER
		{
			name = VisitWaypoint
			type = VisitWaypoint
			index = 3
			distance = 1600
			hideOnCompletion = false
			completeInSequence = true
			disableOnStateChange = false
			hideChildren = true
		}
		PARAMETER
		{
			name = RequestTakeoffLaunch
			type = Duration
			duration = 5s
			preWaitText = request clearance for takeoff:
			waitingText = requesting clearance for takeoff: 
			completionText = be cleared for takeoff
			completeInSequence = true
			disableOnStateChange = true
		}
	}

// -----------------------------------------------------------------	
// Trip to Site2
// -----------------------------------------------------------------

	PARAMETER
	{
		name = RequestLandingSite2
		type = VesselParameterGroup
		vessel = @/craft
		completeInSequence = true
		disableOnStateChange = true
		hideChildren = true
		hidden = true
		
		PARAMETER
		{
			name = VisitWaypoint
			type = VisitWaypoint
			index = 0
			distance = 19000
			hideOnCompletion = true
			completeInSequence = true
			disableOnStateChange = false
			hideChildren = true
			hidden = true
		}
	}

	PARAMETER
	{
		name = LandingSite2
		type = VesselParameterGroup
		title = complete flight to @KSRGAP:siteFullName.ElementAt(@/srcSite) runway
		notes = land and move to within 50 meters of the terminal
		vessel = @/craft
		disableOnStateChange = true
		hideVesselName = true
		completeInSequence = true

		PARAMETER
		{
			name = Site2Terminal
			type = VisitWaypoint
			title = then taxi to the terminal
			index = 1
		    distance = 50
			horizontalDistance = 50
			showMessages =  true
			hideOnCompletion = false
			disableOnStateChange = false
		}
		PARAMETER
		{
			name = ReachState
			type = ReachState
			title = and stop your aricraft
			targetBody = Kerbin
			situation = LANDED
			maxSpeed = 0.0
			disableOnStateChange = false
			hideChildren = true
		}
		
		PARAMETER
		{
			name = All
			type = All
			title = complete passenger exchange
			disableOnStateChange = true
			completeInSequence = true
				
			PARAMETER
			{
				name = ReachState
				type = ReachState
				situation = LANDED
				maxSpeed = 0.0
				disableOnStateChange = false
				hideChildren = true
				hidden = true
				completeInSequence = true
			}		

			PARAMETER
			{
				name = HasCrew
				type = HasCrew
				title = embark the Kerbal passengers
				notes = You will have to go and get them. 
				completeInSequence = true
				kerbal = @/kerbalsPassengers
				disableOnStateChange = true
				completeInSequence = true
			}
		}
	}
	
	PARAMETER
	{
		name = RequestTakeoffSite2 
		type = Duration		
		duration = 5s
		preWaitText = request clearance for takeoff:
		waitingText = requesting clearance for takeoff: 
		completionText = be cleared for takeoff
		completeInSequence = true
		disableOnStateChange = true
	}

//------------------------------------------------------------------------	
//Navigate to waypoint requirement include landing to a complete stop
//------------------------------------------------------------------------

	PARAMETER
	{
		name = AirStrip
		type = VesselParameterGroup
		title = Travel to @KSRGAP:stripName.ElementAt(@/dstSite) Airstrip
		vessel = @/craft
		completeInSequence = true
		disableOnStateChange = true
		hideVesselName = true
		targetBody = @/targetBody
	
		PARAMETER
		{
			title = Land at the Airstrip 
			name = VisitWaypoint
			type = VisitWaypoint
			notes = be within 500 meters of the Airstrip marker
			index = 2
			distance = 500
			horizontalDistance = 500
			showMessages = true
			disableOnStateChange = false
			targetBody = @/targetBody
		}
		PARAMETER
		{
			name = Landing
			type = All
			title = Find a safe place to park
			completeInSequence = true
			disableOnStateChange = true
			targetBody = @/targetBody
			
			PARAMETER
			{
				title = and come to a stop
				name = ReachState
				type = ReachState
				hideChildren = true
				maxSpeed = 0.0
				situation = LANDED
				disableOnStateChange = false
				targetBody = @/targetBody
			}

			PARAMETER
			{
				name = CampSite
				type = Duration
				duration = 2d
				preWaitText = Preparing camp site   
				waitingText = Camping here for: 
				completionText = Passenger visit completed! 
				disableOnStateChange = true
			}
		}
	}

// -----------------------------------------------------------------	
// Return Trip to Site2
// -----------------------------------------------------------------

	PARAMETER
	{
		name = RequestLandingSiteR2
		type = VesselParameterGroup
		vessel = @/craft
		completeInSequence = true
		disableOnStateChange = true
		hideChildren = true
		hidden = true
		
		PARAMETER
		{
			name = VisitWaypoint
			type = VisitWaypoint
			index = 0
			distance = 19000
			hideOnCompletion = true
			completeInSequence = true
			disableOnStateChange = false
			hideChildren = true
			hidden = true
		}
	}

	PARAMETER
	{
		name = MissionAccomplished
		type = VesselParameterGroup
		title = complete flight to @KSRGAP:siteFullName.ElementAt(@/srcSite) runway
		notes = land and move to within 50 meters of the terminal
		vessel = @/craft
		disableOnStateChange = true
		hideVesselName = true
		completeInSequence = true

		PARAMETER
		{
			name = Site2Terminal
			type = VisitWaypoint
			title = then taxi to the terminal
			index = 1
		    distance = 50
			horizontalDistance = 50
			showMessages =  true
			disableOnStateChange = false
		}
		PARAMETER
		{
			name = ReachState
			type = ReachState
			title = and stop your aricraft
			targetBody = Kerbin
			situation = LANDED
			maxSpeed = 0.0
			disableOnStateChange = false
			hideChildren = true
		}
		PARAMETER
		{
			name = TerminalrampSite2
			type = Duration
			
			duration = 10s
			preWaitText = wait for terminal ramp:
			waitingText = ramp being positioned: 
			completionText = ramp is in place begin deplaning  

			completeInSequence = true
			disableOnStateChange = false
		}
	}
//------------------------------------------------------------------------
//Recovery Parameter - Craft & Kerbal Safety Check
//------------------------------------------------------------------------
	PARAMETER
	{
		name = VesselParameterGroup
		type = VesselParameterGroup
		vessel = @/craft
		title = safely
		completeInSequence = true
		disableOnStateChange = true
		
		PARAMETER
		{
			name = VesselNotDestroyed
			type = VesselNotDestroyed
			title = without destroying your aircraft
			vessel = @/craft
		}
		
		PARAMETER
		{
			name = KerbalDeaths
			type = KerbalDeaths
			title = or killing anyone
			vessel = @/craft
		}
	}
	
//Recovery Parameter - Recover Kerbals
	PARAMETER
	{
		name = All
		type = All
		title = and recover all passengers
		
		PARAMETER
		{
			name = RecoverKerbal
			type = RecoverKerbal
			title = @/kerbalsPassengers.First()
	
			ITERATOR
			{
				type = Kerbal
				kerbal = @/kerbalsPassengers	
			}
			
			hideChildren = true
			hidden = true
			
		}
	}

// -----------------------------------------------------------------
// END OF CONTRACT
// -----------------------------------------------------------------
}
