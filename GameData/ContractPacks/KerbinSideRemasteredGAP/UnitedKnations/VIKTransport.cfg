//VIK-Transport - United Knations - Transport a VIK between two airports safely

CONTRACT_TYPE
{
//CONTRACT DESCRIPTION
	sortKey = UK01
	name = UK-VIK-Transport
	title = United Knations VIK Transport
	group = United Knations
	agent = United Knations

	description = The United Knations Liason has asked us to arrange travel for @/vikKerbalName from @/srcSitesName.ElementAt(@/srcSite) to @/dstSitesName.ElementAt(@/dstSite) in order to @/dstSiteReasons.ElementAt(@/dstSite). The Secretary General appreciates our cooperation in this matter.  
	genericDescription = The United Knation Liason has asked us to arrange travel for an important dignatory on UK Business. The Secretary General appreciates our cooperation in this matter.
	synopsis = Pick up the VIK from thier current location and fly them to their destination. 
	notes = This mission requires the passenger to board the aircraft at the pick up location. Make sure there is a hatch and a ladder for them to use.    
	completedMessage = The United Knations is greatful and thanks you for your assistance in helping @/vikKerbalName get to @/dstSitesName.ElementAt(@/dstSite) safely.

//Contract Limits
	maxCompletions = 0
	maxSimultaneous = 1
	autoAccept = false
	declinable = true
	cancellable = true
	minExpiry = 1.0
	maxExpiry = 1.0
	deadline = 0

//Contract Reward Modifiers
	prestige = Trivial
	targetBody = Kerbin
	
//Contract Rewards
	advanceFunds = 10000.0
	rewardFunds = 40000
	rewardReputation = 5.0
	rewardScience = 0.0

//Contract Penalties
	failureFunds = 50000.0
	failureReputation = 15.0
	
// REQUIREMENTS FOR CONTRACT TO APPEAR
// Requires that all KSRGAP airports open be completed
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		minCount = 1
		contractType = Airline-Flight-1210
	}
	
//After Disaster Relief mission is complete wait 30 days before offering another	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		minCount = 0
		contractType = UK-VIK-Transport
		cooldownDuration = 1d
	}
	
//DATA NODES TO PROCESS FOR CONTRACT USE
//Contract Specific VesselParameterGroup Definition Key (to prevent conflict with other active contracts)
	DATA
	{
		type = string
		craft = KSRGAPVIKTransport
	}

// The VIK to pick up 

//Rank List
	DATA
	{
		type = List<string>
		
		vikTitleList = [ "Doctor " , "Professor " , "Secretary ", "Ambassador ", "Attach√© "]
		
	} 

	DATA
	{
		type = string
		
		vikTitle = @/vikTitleList.Random()
		vikKerbalName = @/vikTitle + RandomKerbalName(Random())
		
		hidden = true
		
	}	
	
		
	DATA
	{
		type = List<Kerbal>
		
		kerbalVIK = [ NewKerbal( Gender(Random()), @/vikKerbalName ) ]
		
		hidden = true
		
	}


// Source location of VIK
	DATA
	{
		type = int
		srcSite = Random(0, 10) 
	}
	
	DATA
	{
		type = List<string>
		srcSitesName = ["Kola Island","Sandy Island","Kerman Atoll","Meeda","South Field","Uberdam","Kamberwick Green","South Lake","Hazard Shallows","Dununda","Round Range"] 
	}
// Source locations are terminal LON/LAT for VIK spawn, Not runway locations	
	DATA
	{
		type = List<double>
		srcSitesLat = [-4.2014238656139,-8.17225624752724,-37.1353895318525,37.9078664150075,-46.9824527294108,38.5116070706896,36.1978674613555,-37.2704022161004,-14.2443042907193,-39.3579508976726,-6.06890717013569]  
	}
	
	DATA
	{
		type = List<double>
		srcSitesLon = [-72.147060200731,-42.3822364770151,-71.0440719984588,-109.850550277716,-140.960497300639,-149.666308634275,10.5889075129516,52.4444075146586,155.19162618866,116.173526169433,99.4881647714339]  
	}
	

//  VIK's Destination	
	DATA
	{
		type = int
		dstSite = Random(0, 10)  
	}
	
	DATA
	{
		type = List<string>
		dstSitesName = ["Island Airfield","Jeb's Junkyard","Cape Kerman","Kojave Sands","Desert Airfield","Polar Research Alpha","Baikerbanur","Harvester","Kermundsen Station","Nye Island","TSA15"]
	}

// Destinations locations are site runway locations	
	DATA
	{
		type = List<double>
		dstSitesLat = [-1.51771875133329,6.95215272903442,24.9067573547363,6.050330639,-6.52009127233,72.56324005,20.6048107,-56.29705429,-89.87486267,5.746015549,-60.55518888] 
	}
	
	DATA
	{
		type = List<double>
		dstSitesLon = [-71.906177285227,-77.9381103515625,-83.62899017,-141.9779205,-144.03940521399,-78.55982971,-146.51226806,-10.98251915,-172.391983,108.7499619,39.25160199] 
	}

	DATA
	{
		type = List<string>
		hidden = true
		dstSiteReasons = ["have a vacation getaway","examin rare technology recently discovered","attend the test firing of new rocket engines","attend a symposiunm on water use policy","visit Benjamin Kerman's casino","observe the northen lights display","tour the historical launch facilities","visit the observatory","to visit the farthest place south","inspect the Commnet ground station","[REDACTED]"]
	}
	
//List of Possible UK characters
	DATA
	{
		type = List<string>
		
		UKatctypes = ["UK_ATC_M" ,"UK_ATC_M"]
		
		hidden = true 
	}
	

	
//Pick One Random UK character to Use for Contract dialogs
	DATA
	{
		type = string
		
		UKatc = @/UKatctypes.Random()
		
		hidden = true
		
	}
	
//After Disaster Relief mission is complete wait 30 days before offering another	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		minCount = 0
		contractType = UK-Disaster-Relief
		cooldownDuration = 30d
	}

//BEHAVIOURS TO DO WHEN CREATING CONTRACT
// Waypoint to determine disaster zone
	BEHAVIOUR
	{
        name = WaypointGenerator
        type = WaypointGenerator
		
		WAYPOINT
		{
			name = @/srcSitesName.ElementAt(@/srcSite)
			icon = ContractPacks/KerbinSideRemasteredGAP/Assets/Icons/VIK 
			targetBody = @/targetBody
			latitude = @/srcSitesLat.ElementAt(@/srcSite)
			longitude = @/srcSitesLon.ElementAt(@/srcSite)
			altitude = 0.0
		}
				
		
		WAYPOINT
		{
			name = @/dstSitesName.ElementAt(@/dstSite) 
			targetBody = @/targetBody
			icon = ContractPacks/KerbinSideRemasteredGAP/Assets/Icons/Airport
			latitude = @/dstSitesLat.ElementAt(@/dstSite)
			longitude = @/dstSitesLon.ElementAt(@/dstSite)
			altitude = 0.0
		}
    }
	
	
    //Spawn the VIK
	BEHAVIOUR
	{
		name = SpawnKerbal
		type = SpawnKerbal

		KERBAL
		{
			kerbal = @/kerbalVIK.First()
			kerbalType = Unowned
			owned = false
			addToRoster = false
			lat = @/srcSitesLat.ElementAt(@/srcSite)
			lon = @/srcSitesLon.ElementAt(@/srcSite)
			heading = 90

		}
		
	}

//Contract Dialogs	
	BEHAVIOUR
	{
		name = DialogBox
		type = DialogBox

		DIALOG_BOX
		{
			condition = CONTRACT_SUCCESS
			
			position = CENTER
			title = <b>Wonderful News</b>
			textColor = #BADA55
			
			TEXT
			{
				text = <color=#BADA55>The Secretay Genreal's office has been informed of your success. We would like to thank you for providing the resources necessary to make this tlight happen.</color>    
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredGAP/Assets/Characters/@/UKatc
				characterName = United Knations Liason
			}
			
		}
	
		DIALOG_BOX
		{
			condition = CONTRACT_FAILED
			
			position = CENTER
			title = <b>Sometimes Things Go Wrong</b>
			titleColor = #FF0000
			
			TEXT
			{
				text = <color=#FF0000>We are very disappointed in by your recent set back. The Secretay Genreal's office has been informed of the incident.</color>    
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredGAP/Assets/Characters/@/UKatc
				characterName = United Knations Liason
			}
			// Need a failure condition to remove the VIK
			BEHAVIOUR
			{
				name = RemoveKerbal
				type = RemoveKerbal

				kerbal = @/kerbalVIK
			}
			
		}		

	}

//PARAMETERS FOR CONTRACT COMPLETION
    //Craft definition
	PARAMETER
	{
		name = VesselParameterGroup
		type = VesselParameterGroup
		title = Your aircraft must meet mission requirements and goals
		
		define = @/craft
		dissassociateVesselsOnContractCompletion = true

		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			title = have a certified pilot
			
			trait = Pilot
			minCrew = 1
		
			disableOnStateChange = false
			hideChildren = true

		}

		PARAMETER
		{
			name = HasCrewCapacity
			type = HasCrewCapacity
			title = have seating for crew and @/vikKerbalName
			
			minCapacity = 2
			
			disableOnStateChange = false
			
		}
		
	}
//Navigate to waypoint requirement include landing to a complete stop
    //Contract Goals
	PARAMETER
	{
		name = SourceSite
		type = VesselParameterGroup
		title = Fly to @/srcSitesName.ElementAt(@/srcSite) and Pick up @/vikKerbalName
		notes = Your aircaft should be able to be boarded while landed
		vessel = @/craft
		disableOnStateChange = true
		completeInSequence = true
		
		PARAMETER
		{			            
			name = ReachState   
			type = ReachState
			title = land and taxi to the terminal
			situation = LANDED
			maxSpeed = 0.0
			disableOnStateChange = false
			hideChildren = true
		}	
		
		PARAMETER
		{
			name = the Airport Terminal
			type = VisitWaypoint
			index = 0
			distance = 100
			showmessage = true
			hideOnCompletion = true
			completeInSequence = true
			hideChildren = true
			
		}
		
		PARAMETER
		{
			name = EmbarkVIP
			type = All
			title = Embark the VIK
			completeInSequence = true
			
			PARAMETER
			{
				name = HasCrew
				type = HasCrew
				minCrew = 2
				completeInSequence = true			
				disableOnStateChange = false
				hidden = true
				
			}
			
			PARAMETER
			{
				name = HasCrew
				type = HasCrew
				completeInSequence = true				
				kerbal = @/kerbalVIK
				disableOnStateChange = false
				
			}
		}

		
	}
	
	

	PARAMETER
	{
		name = DestinationSite
		type = All
		title = Fly to @/dstSitesName.ElementAt(@/dstSite) and land	
		
		PARAMETER
		{			            
			name = ReachState   
			type = ReachState

			situation = LANDED
			maxSpeed = 0.0
			
			completeInSequence = true
			disableOnStateChange = false
			hideChildren = true
			hidden = true
			
		}
		
		PARAMETER
		{
			name = VisitWaypoint
			type = VisitWaypoint
			index = 1

			distance = 690
			completeInSequence = true
			showmessage = true
			hideOnCompletion = true
			disableOnStateChange = false
			hideChildren = true
			
		}
	}

//Recovery Parameter - Craft & Kerbal Safety Check

	PARAMETER
	{
		name = All
		type = All
		title = safely 
		completeInSequence = true
		disableOnStateChange = true
		
		PARAMETER
		{
			name = KerbalDeaths
			type = KerbalDeaths
			title = without killing your crew
			vessel = @/craft
			hideChildren = true
		}
		
		PARAMETER
		{
			name = KerbalDeaths
			type = KerbalDeaths
			title = or @/vikKerbalName 
			kerbal = @/kerbalVIK
			hideChildren = true
			
		}
	
	}	
	
	
//Recovery Parameter - Recover Kerbals
	PARAMETER
	{
		name = RecoverKerbal
		type = RecoverKerbal
		notes = the VIK can EVA from the aircraft and be recovered allowing the aircraft to be recovered seperately at another location
		title = Recover @/vikKerbalName
		kerbal = @/kerbalVIK
		hideChildren = true	
	}
}



	



	