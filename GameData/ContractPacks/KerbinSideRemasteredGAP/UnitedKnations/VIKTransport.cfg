// -----------------------------------------------------------------
//	CONTRACT:  KSRGAP-VIK-Transport - United Knations - United Knations - Transport a VIK between two airports safely
//	Author: Caerfinon 
//	Credits:
//	{
//		Original GAP: Author - inigma
//		Original Kerbin side GAP: Author - Keniamin 
//	}
// -----------------------------------------------------------------

CONTRACT_TYPE
{
//CONTRACT DESCRIPTION
	sortKey = KSRGAP-UK01
	name = KSRGAP-UK-VIK-Transport
	title = United Knations VIK Transport
	group = United Knations
	agent = United Knations

	description = The United Knations Liason has asked us to arrange travel for @/vikKerbalName from @KSRGAP:siteFullName.ElementAt(@/srcSite) to @KSRGAP:siteName.ElementAt(@/dstSite) in order to @/dstSiteReasons.Random() The Secretary General appreciates our cooperation in this matter and is sending @/agentKerbalName to observe.   
	genericDescription = The United Knation Liason has asked us to arrange travel for an important dignatory on UK Business. The Secretary General appreciates our cooperation in this matter.
	synopsis = Pick up the VIK from thier current location and fly them to their destination. 
	notes = This mission requires the passenger to board the aircraft at the pick up location. Make sure there is a hatch and a ladder for them to use.    
	completedMessage = The United Knations is greatful and thanks you for your assistance in helping @/vikKerbalName get to @KSRGAP:siteFullName.ElementAt(@/dstSite) safely.

//Contract Limits
	maxCompletions = 0
	maxSimultaneous = 1
	autoAccept = false
	declinable = true
	cancellable = true
	minExpiry = 1.0
	maxExpiry = 1.0
	deadline = 0

//Contract Reward Modifiers
	prestige = Significant
	targetBody = Kerbin
	
//Contract Rewards
	advanceFunds = (@/rewardFunds * 0.25 )
	rewardFunds = 40000 * Random(1.0, 1.15)
	rewardReputation = 5.0
	rewardScience = 0.0

//Contract Penalties
	failureFunds = (@/rewardFunds * 1.15) * Random(1.0, 1.25)
	failureReputation = 15.0
	
// REQUIREMENTS FOR CONTRACT TO APPEAR
// Requires that all KSRGAP airports open be completed
	REQUIREMENT
	{
		name = Expression
		type = Expression
		title = Flight Progess level completed
		expression = $ksrgapFlightProgress >= 20
	}
	
//After Disaster Relief mission is complete wait 3 days before offering another	
	REQUIREMENT
	{
		title = Cool down timer 3 days
		name = CompleteContract
		type = CompleteContract
		minCount = 0
		contractType = KSRGAP-UK-VIK-Transport
		cooldownDuration = 3d
	}
	
//DATA NODES TO PROCESS FOR CONTRACT USE
//Contract Specific VesselParameterGroup Definition Key (to prevent conflict with other active contracts)
	DATA
	{
		type = string
		craft = KSRGAPVIKTransport
	}

// The VIK to pick up 

//Rank List
	DATA
	{
		type = List<string>
		
		vikTitleList = [ "Doctor " , "Professor " , "Secretary ", "Ambassador ", "Attach√© "]
		agentTitleList = [ "Assistant " , "Aide "]
		
	} 

// Randomly select 0 (male) or 1 (female)
	DATA
	{
		type = int
		genderTypeVIK = Random(0,1)
		genderType = Random(0,1)
	}

Greate a bool for gender	
	DATA
    {
        type = bool
        isFemaleVIK = @/genderTypeVIK == 1
		isFemale = @/genderType == 1
    }


	DATA
	{
		type = string
		
		vikTitle = @/vikTitleList.Random()
		vikKerbalName = @/vikTitle + RandomKerbalName(@/isFemaleVIK ? Female : Male)
		
		hidden = true
		
	}	
	
		
	DATA
	{
		type = List<Kerbal>
		
		kerbalVIK = [ NewKerbal( @/isFemaleVIK ? Female : Male, @/vikKerbalName ) ]
		
		hidden = true
		
	}
	
	
	DATA
	{
		type = string
		agentTitle = @/agentTitleList.Random()
		agentKerbalName = @/agentTitle + RandomKerbalName(@/isFemale ? Female : Male)
		hidden = true
		
	}	
		
	DATA
	{
		type = List<Kerbal>
		kerbalAgent = [ NewKerbal( @/isFemale ? Female : Male, @/agentKerbalName  ) ]
		hidden = true
		
	}


// Source location of VIK
    // Exclude the Island Airfield as a source
	DATA
	{
		type = int
		srcSite = Random(1,$ksrgapFlightProgress) 
	}

//  VIK's Destination
    // Exclude the Island Airfield as a destination	
	DATA
	{
		type = int
		dstSiteTemp = Random(1,$ksrgapFlightProgress)
		// If the src and dst sites are identical, then make the destination the Island Airfield
		dstSite = @/dstSiteTemp == @/srcSite ?  0 : @/dstSiteTemp
	}


	DATA
	{
		type = List<string>
		hidden = true
		dstSiteReasons = ["have a vacation getaway.","examin rare technology recently discovered.","attend the test firing of new rocket engines.","attend a symposiunm on water use policy.","observe the a unique natural phenomenon.","tour a significant historical site.","visit family.","attend an important conference.","inspect local facilities."]
	}
	
//List of Possible ATC genders
	DATA
	{
		type = List<string>
		ATCGender = ["M" ,"F"]
		hidden = true
	}
	
// Merge random gender to Group siteATC type to select dialog image
	DATA
	{
		type = string
		site2ATCImage = @KSRGAP:siteATC.ElementAt(@/srcSite) + @/ATCGender.Random()
		hidden = true
	}
	
	DATA
	{
		type = string
		site3ATCImage = @KSRGAP:siteATC.ElementAt(@/dstSite) + @/ATCGender.Random()
		hidden = true
	}
	
//List of Possible UK characters
	DATA
	{
		type = List<string>
		
		UKatctypes = ["UK_ATC_M" ,"UK_ATC_F"]
		
		hidden = true 
	}
	
//Pick One Random UK character to Use for Contract dialogs
	DATA
	{
		type = string
		
		UKatc = @/UKatctypes.Random()
		
		hidden = true
		
	}

//BEHAVIOURS TO DO WHEN CREATING CONTRACT
// Waypoint to determine VIK pick up and drop off
	BEHAVIOUR
	{
        name = WaypointGenerator
        type = WaypointGenerator
		
		WAYPOINT
		{
			name = @KSRGAP:siteName.ElementAt(@/srcSite) 
			targetBody = @/targetBody
			icon = ContractPacks/KerbinSideRemasteredGAP/Assets/Icons/Airport
			latitude = @KSRGAP:siteLAT.ElementAt(@/srcSite)
			longitude = @KSRGAP:siteLON.ElementAt(@/srcSite)
			altitude = 0
		}

		WAYPOINT
		{
			name = @/vikKerbalName
			icon = ContractPacks/KerbinSideRemasteredGAP/Assets/Icons/VIK 
			targetBody = @/targetBody
			latitude = @KSRGAP:siteVikTerminalLAT.ElementAt(@/srcSite)
			longitude = @KSRGAP:siteVikTerminalLON.ElementAt(@/srcSite)
			parameter = RequestLandingSite2
			altitude = 0
		}
		
		WAYPOINT
		{
			name = @KSRGAP:siteName.ElementAt(@/dstSite) 
			targetBody = @/targetBody
			icon = ContractPacks/KerbinSideRemasteredGAP/Assets/Icons/Airport
			latitude = @KSRGAP:siteLAT.ElementAt(@/dstSite)
			longitude = @KSRGAP:siteLON.ElementAt(@/dstSite)
			altitude = 0
		}
				
		
		WAYPOINT
		{
			name = the Airport Terminal 
			targetBody = @/targetBody
			icon = ContractPacks/KerbinSideRemasteredGAP/Assets/Icons/terminal
			latitude = @KSRGAP:siteVikTerminalLAT.ElementAt(@/dstSite)
			longitude = @KSRGAP:siteVikTerminalLON.ElementAt(@/dstSite)
			parameter = RequestLandingSite3
			altitude = 0
		}		

		WAYPOINT
		{
			name = KSC Runway
			hidden = true
			latitude = @KSRGAP:kscRunwayLAT
			longitude = @KSRGAP:kscRunwayLON
			altitude = 0
		}
	
    }
	
	//Kerbals to remove 
	BEHAVIOUR
	{
		name = RemoveKerbal
		type = RemoveKerbal
		kerbal = @/kerbalAgent.ElementAt(0)
	}

    //Spawn the Agent to go on the misssion with you
	BEHAVIOUR
	{
		name = SpawnPassengers
		type = SpawnPassengers
		
		kerbal = @/kerbalAgent.ElementAt(0)
		kerbalType = Crew
	}
    //Spawn the VIK
	BEHAVIOUR
	{
		name = SpawnKerbal
		type = SpawnKerbal

		KERBAL
		{
			kerbal = @/kerbalVIK.First()
			kerbalType = Unowned
			owned = false
			addToRoster = false
			lat = @KSRGAP:siteVikTerminalLAT.ElementAt(@/srcSite)
			lon = @KSRGAP:siteVikTerminalLON.ElementAt(@/srcSite)
			heading = 90

		}
		
	}

//Contract Dialogs	
	BEHAVIOUR
	{
		name = DialogBox
		type = DialogBox

		DIALOG_BOX
		{
			condition = PARAMETER_COMPLETED
			parameter = RequestTakeoffLaunch
			position = CENTER
			
			TEXT
			{
				text = Thanks you so much for doing this on such short notice. The Secretary General will be happy to know our people are being well taken care of. You are cleared for depature and immediate take off.
				fontSize = 20
				textColor = #BADA55
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredGAP/Assets/Characters/@/UKatc
				characterName = United Knations Liason
			}
			
		}
		
		DIALOG_BOX
		{
			condition = PARAMETER_COMPLETED
			parameter = RequestLandingSite2
			
			position = CENTER
			
			TEXT
			{
				text = Trans Flight, we have you on approach. You are cleared for landing. Your passenger is waiting at the terminal. Directions have been transmited to you.
				fontSize = 20
				textColor = #BADA55
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredGAP/Assets/Characters/@/site2ATCImage
				characterName = Local Air Traffic Control
			}
			
		}
		
		DIALOG_BOX
		{
			condition = PARAMETER_COMPLETED
			parameter = RequestTakeoffSite2
			
			position = CENTER
			
			TEXT
			{
				text = Trans Flight, you are cleared for departure. Please proceed to the runway for immediate takeoff  
				fontSize = 20
				textColor = #BADA55
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredGAP/Assets/Characters/@/site2ATCImage
				characterName = Local Air Traffic Control
			}
			
		}
		
		DIALOG_BOX
		{
			condition = PARAMETER_COMPLETED
			parameter = RequestLandingSite3
			
			position = CENTER
			
			TEXT
			{
				text = Trans Flight, we have you on approach. You are cleared for landing. On touchdown proceed to the indicated airport terminal for passenger deplaning. Directions have been transmited to you.
				fontSize = 20
				textColor = #BADA55
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredGAP/Assets/Characters/@/site3ATCImage
				characterName = Local Air Traffic Control
			}
			
		}

		DIALOG_BOX
		{
			condition = PARAMETER_COMPLETED
			parameter = SafetyCheck
			position = CENTER
			title = <b>Wonderful News</b>
			textColor = #BADA55
			
			TEXT
			{
				text = <color=#BADA55>The Secretay Genreal's office has been informed of your success. We would like to thank you for providing the resources necessary to make this flight happen.</color>    
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredGAP/Assets/Characters/@/UKatc
				characterName = United Knations Liason
			}
			
		}

		DIALOG_BOX
		{
			condition = CONTRACT_FAILED
			
			position = CENTER
			title = <b>Sometimes Things Go Wrong</b>
			titleColor = #FF0000
			
			TEXT
			{
				text = <color=#FF0000>We are very disappointed in by your recent set back. The Secretay Genreal's office has been informed of the incident.</color>    
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredGAP/Assets/Characters/@/UKatc
				characterName = United Knations Liason
			}
			// Need a failure condition to remove the VIK
			BEHAVIOUR
			{
				name = RemoveKerbal
				type = RemoveKerbal

				kerbal = @/kerbalVIK
			}
			
		}		

	}

//PARAMETERS FOR CONTRACT COMPLETION
    //Craft definition
	PARAMETER
	{
		name = VesselParameterGroup
		type = VesselParameterGroup
		title = Your aircraft must meet mission requirements and goals
		define = @/craft
		completeInSequence = true

		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			title = have a certified pilot
			
			trait = Pilot
			minCrew = 1
		
			disableOnStateChange = false
			hideChildren = true

		}
		
		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			title = have a Scientist
			notes = VIKs need intelligent people to talk to
			
			trait = Scientist
			minCrew = 1
		
			disableOnStateChange = false
			hideChildren = true

		}
		
		PARAMETER
		{
			name = HasCrewCapacity
			type = HasCrewCapacity
			title = have seating for crew, @/vikKerbalName and @/agentKerbalName
			minCapacity = 4
			disableOnStateChange = false
			
		}
		
		PARAMETER
		{
			title = Have @/agentKerbalName on board
			name = HasPassengers
			type = HasPassengers
			kerbal = @/kerbalAgent.ElementAt(0)
		}

	}
	
//Launch Site
	PARAMETER
	{
		name = LaunchSite
		type = VesselParameterGroup
		title = begin at the KSC Runway
		vessel = @/craft
		completeInSequence = true
		disableOnStateChange = true
		hideVesselName = true

		
		PARAMETER
		{
			name = VisitWaypoint
			type = VisitWaypoint
			index = 4
			distance = 1600
			hideOnCompletion = false
			completeInSequence = true
			disableOnStateChange = false
			hideChildren = true
		}
		
	}
	
	PARAMETER
	{
		name = RequestTakeoffLaunch
		type = Duration
		duration = 5s
		preWaitText = request clearance for takeoff:
		waitingText = requesting clearance for takeoff: 
		completionText = be cleared for takeoff
		completeInSequence = true
		disableOnStateChange = true
	}
	
// -----------------------------------------------------------------	
// Trip to VIK Pick up
// -----------------------------------------------------------------

	PARAMETER
	{
		name = RequestLandingSite2
		type = VesselParameterGroup
		vessel = @/craft
		completeInSequence = true
		disableOnStateChange = true
		hideChildren = true
		hidden = true
		
		PARAMETER
		{
			name = VisitWaypoint
			type = VisitWaypoint
			index = 0
			distance = 19000
			hideOnCompletion = true
			completeInSequence = true
			disableOnStateChange = false
			hideChildren = true
			hidden = true
		}
	}

//Navigate to waypoint requirement include landing to a complete stop
    //Contract Goals
	PARAMETER
	{
		name = LandingSite2
		type = VesselParameterGroup
		title = complete flight to @KSRGAP:siteFullName.ElementAt(@/srcSite) and pick up @/vikKerbalName
		vessel = @/craft
		disableOnStateChange = true
		hideVesselName = true
		completeInSequence = true
	
		PARAMETER
		{
			name = ReachState
			type = ReachState
			title = land at @KSRGAP:siteName.ElementAt(@/srcSite) runway
			notes = land and move to within 50 meters of the terminal
			targetBody = Kerbin
			situation = LANDED
			maxSpeed = 0.0
			disableOnStateChange = false
			hideChildren = true
		}	

		PARAMETER
		{
			name = Site2Terminal
			type = VisitWaypoint
			title = then taxi to the terminal and stop
			index = 1
			distance = 50
			horizontalDistance = 50
			showMessages =  true
			disableOnStateChange = false
		}
		
		PARAMETER
		{
			name = EmbarkVIP
			type = All
			title = Embark the VIK
			completeInSequence = true
			
			PARAMETER
			{
				name = HasCrew
				type = HasCrew
				minCrew = 2
				completeInSequence = true			
				disableOnStateChange = false
				hidden = true
				
			}
			
			PARAMETER
			{
				name = HasCrew
				type = HasCrew
				completeInSequence = true				
				kerbal = @/kerbalVIK
				disableOnStateChange = false
				
			}
		}
	}

	PARAMETER
	{
		name = RequestTakeoffSite2
		type = Duration		
		duration = 5s
		preWaitText = request clearance for takeoff:
		waitingText = requesting clearance for takeoff: 
		completionText = be cleared for takeoff
		completeInSequence = true
		disableOnStateChange = true
	}
	
// -----------------------------------------------------------------	
// Trip to VIK Drop off
// -----------------------------------------------------------------

	PARAMETER
	{
		name = RequestLandingSite3
		type = VesselParameterGroup
		vessel = @/craft
		completeInSequence = true
		disableOnStateChange = true
		hideChildren = true
		hidden = true
		
		PARAMETER
		{
			name = VisitWaypoint
			type = VisitWaypoint
			index = 2
			distance = 19000
			hideOnCompletion = true
			completeInSequence = true
			disableOnStateChange = false
			hideChildren = true
			hidden = true
		}
	}

	PARAMETER
	{
		name = LandingSite3
		type = VesselParameterGroup
		title = complete flight to @KSRGAP:siteFullName.ElementAt(@/dstSite)
		vessel = @/craft
		disableOnStateChange = true
		hideVesselName = true
		completeInSequence = true
	
		PARAMETER
		{
			name = ReachState
			type = ReachState
			title = land at @KSRGAP:siteName.ElementAt(@/dstSite) runway
			notes = land and move to within 50 meters of the terminal
			targetBody = Kerbin
			situation = LANDED
			maxSpeed = 0.0
			disableOnStateChange = false
			hideChildren = true
		}	

		PARAMETER
		{
			name = Site3Terminal
			type = VisitWaypoint
			title = then taxi to the terminal and stop
			index = 3
			distance = 50
			horizontalDistance = 50
			showMessages =  true
			disableOnStateChange = false
		}
	}

//Recovery Parameter - Craft & Kerbal Safety Check

	PARAMETER
	{
		name = SafetyCheck
		type = All
		title = safely
		completeInSequence = true
		disableOnStateChange = true
		
		
		PARAMETER
		{
			name = KerbalDeaths
			type = KerbalDeaths
			title = without killing @/vikKerbalName 
			kerbal = @/kerbalVIK
			hideChildren = true
			
		}
	
	}	
	
	
//Recovery Parameter - Recover Kerbals
PARAMETER
{
    name = RecoverVessel
    type = RecoverVessel
	completeInSequence = true
    title = Recover you vessel and passengers at @KSRGAP:siteName.ElementAt(@/dstSite)
}




	



	