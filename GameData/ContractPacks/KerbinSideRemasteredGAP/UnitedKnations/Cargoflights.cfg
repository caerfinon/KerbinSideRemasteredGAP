// -----------------------------------------------------------------
//	CONTRACT:  KSRGAP-UK-Cargo-Flights - United Knations - United Knations - Transport between one or two airports safely
//	Author: Caerfinon 
//	Credits:
//	{
//		Original GAP: Author - inigma
//		Original Kerbin side GAP: Author - Keniamin 
//	}
// -----------------------------------------------------------------

CONTRACT_TYPE
{
//CONTRACT DESCRIPTION
	sortKey = KSRGAP-UK02
	name = KSRGAP-UK-Cargo-Flights
	title = United Knations Cargo Flights
	group = United Knations
	agent = United Knations

	description = The United Knations Liason has asked us to provide a @/fltSize cargo flight from @KSRGAP:siteFullName.ElementAt(@/srcSite) to @KSRGAP:siteName.ElementAt(@/dstSite) carrying a load of @/fltReason. The Secretary General appreciates our cooperation in this matter.  
	genericDescription = The United Knation Liason has asked us to provide a cargo flight to carry supplies to an important instalation. The Secretary General appreciates our cooperation in this matter.
	synopsis = Fly a cargo plane to the pick up airport and then to the destination airport and then return to the KSC 
	notes = Aircaft must have 1-4 parts from the Payload category. This can be stock parts or any parts from mods that classify them as Payload   
	completedMessage = The United Knations is greatful and thanks you for your assistance in helping move the @/fltReason to @KSRGAP:siteFullName.ElementAt(@/dstSite) safely.

//Contract Limits
	maxCompletions = 0
	maxSimultaneous = 1
	autoAccept = false
	declinable = true
	cancellable = true
	minExpiry = 1.0
	maxExpiry = 1.0
	deadline = 0

//Contract Reward Modifiers
	prestige = Significant
	targetBody = Kerbin
	
//Contract Rewards
	advanceFunds = (@/rewardFunds * 0.25 )
	rewardFunds = 10000 * @/payloadParts  * Random(1.0, 1.15)
	rewardReputation = 1.0 * @/payloadParts
	rewardScience = 0.0

//Contract Penalties
	failureFunds = (@/rewardFunds * 1.15) * Random(1.0, 1.25)
	failureReputation = 2.0 * @/payloadParts
	
// REQUIREMENTS FOR CONTRACT TO APPEAR
// Requires that all KSRGAP airports open be completed
	REQUIREMENT
	{
		name = Expression
		type = Expression
		title = Flight Progess level completed
		expression = $ksrgapFlightProgress >= 21
	}
	
//After mission is complete wait 1 day before offering it again	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		minCount = 0
		contractType = KSRGAP-UK-Cargo-Flights
		cooldownDuration = 1d
	}
	
//DATA NODES TO PROCESS FOR CONTRACT USE
//Contract Specific VesselParameterGroup Definition Key (to prevent conflict with other active contracts)
	DATA
	{
		type = string
		craft = KSRGAPCargoFlight
	}

// Payloadparts
	DATA
	{
		type = int
		payloadParts = Random(1, 4) 
	}


// Source location of Cargo
    // Exclude the Island Airfield as a source
	DATA
	{
		type = int
		srcSite = Random(1,$ksrgapFlightProgress) 																																		   
	}

//  Cargo Destination
    // Exclude the Island Airfield as a destination	
	DATA
	{
		type = int
		dstSiteTemp = Random(1,$ksrgapFlightProgress)
		// If the src and dst sites are identical, then make the destination the Island Airfield
		dstSite = @/dstSiteTemp == @/srcSite ?  0 : @/dstSiteTemp
	}

	DATA
	{
		type = List<string>
		hidden = true
		fltReasons = ["surplus the Not-Rockomax Micronodes", "Small Nose Cones", "OX-STAT Photovoltaic Panels","Communotron 16s","2HOT Thermometers","Illuminator Mk1s","Pegasus I Mobility Enhancers" ]
	}
	
	DATA
	{
		type = string
		hidden = true
		fltReason = @/fltReasons.Random()
	}

//Cargo Size fltSize

	DATA
	{
		type = List<string>
		
		fltSizes = ["Null","tiny","small","medium","large"]
		
		hidden = true 
	}
	
	DATA
	{
		type = string
		
		fltSize = @/fltSizes.ElementAt(@/payloadParts)
		
		hidden = true
		
	}


//List of Possible ATC genders

	DATA
	{
		type = List<string>
		ATCGender = ["M" ,"F"]
		hidden = true
	}
	
// Merge random gender to Group siteATC type to select dialog image
	DATA
	{
		type = string
		site2ATCImage = @KSRGAP:siteATC.ElementAt(@/srcSite) + @/ATCGender.Random()
		hidden = true
	}
	
	DATA
	{
		type = string
		site3ATCImage = @KSRGAP:siteATC.ElementAt(@/dstSite) + @/ATCGender.Random()
		hidden = true
	}
	
//List of Possible UK characters
	DATA
	{
		type = List<string>
		
		UKatctypes = ["UK_ATC_M" ,"UK_ATC_M"]
		
		hidden = true 
	}
	
//Pick One Random UK character to Use for Contract dialogs
	DATA
	{
		type = string
		
		UKatc = @/UKatctypes.Random()
		
		hidden = true
		
	}

//BEHAVIOURS TO DO WHEN CREATING CONTRACT
// Waypoint to determine cargo pick up and drop off
	BEHAVIOUR
	{
        name = WaypointGenerator
        type = WaypointGenerator
		
		WAYPOINT
		{
			name = @KSRGAP:siteName.ElementAt(@/srcSite)
			targetBody = @/targetBody
			icon = ContractPacks/KerbinSideRemasteredGAP/Assets/Icons/Airport
			latitude = @KSRGAP:siteLAT.ElementAt(@/srcSite)
			longitude = @KSRGAP:siteLON.ElementAt(@/srcSite)
			altitude = 0.0
		}

		WAYPOINT
		{
			name = the Airport Terminal 
			icon = ContractPacks/KerbinSideRemasteredGAP/Assets/Icons/terminal
			targetBody = @/targetBody
			latitude = @KSRGAP:siteVikTerminalLAT.ElementAt(@/srcSite)
			longitude = @KSRGAP:siteVikTerminalLON.ElementAt(@/srcSite)
			parameter = RequestLandingSite2
			altitude = 0.0
		}
		
		WAYPOINT
		{
			name = @KSRGAP:siteName.ElementAt(@/dstSite) 
			targetBody = @/targetBody
			icon = ContractPacks/KerbinSideRemasteredGAP/Assets/Icons/Airport
			latitude = @KSRGAP:siteLAT.ElementAt(@/dstSite)
			longitude = @KSRGAP:siteLON.ElementAt(@/dstSite)
			altitude = 0.0
		}
				
		
		WAYPOINT
		{
			name = the Airport Terminal 
			targetBody = @/targetBody
			icon = ContractPacks/KerbinSideRemasteredGAP/Assets/Icons/terminal
			latitude = @KSRGAP:siteVikTerminalLAT.ElementAt(@/dstSite)
			longitude = @KSRGAP:siteVikTerminalLON.ElementAt(@/dstSite)
			parameter = RequestLandingSite3
			altitude = 0.0
		}		
		
    }

//Contract Dialogs	
	BEHAVIOUR
	{
		name = DialogBox
		type = DialogBox

		DIALOG_BOX
		{
			condition = PARAMETER_COMPLETED
			parameter = RequestTakeoffLaunch
			position = CENTER
			
			TEXT
			{
				text = Thanks you so much for doing this on such short notice. The Secretary General will be happy to know this shipment is moving again. You are cleared for depature and immediate take off.
				fontSize = 20
				textColor = #BADA55
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredGAP/Assets/Characters/@/UKatc
				characterName = United Knations Liason
			}
			
		}
		
		DIALOG_BOX
		{
			condition = PARAMETER_COMPLETED
			parameter = RequestLandingSite2
			
			position = CENTER
			
			TEXT
			{
				text = Trans Flight, we have you on approach. You are cleared for landing. The cargo shipment is waiting at the assigned terminal. Directions have been transmited to you.
				fontSize = 20
				textColor = #BADA55
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredGAP/Assets/Characters/@/site2ATCImage
				characterName = Local Air Traffic Control
			}
			
		}
		
		DIALOG_BOX
		{
			condition = PARAMETER_COMPLETED
			parameter = RequestTakeoffSite2
			
			position = CENTER
			
			TEXT
			{
				text = Trans Flight, you are cleared for departure. Please proceed to the runway for immediate takeoff  
				fontSize = 20
				textColor = #BADA55
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredGAP/Assets/Characters/@/site2ATCImage
				characterName = Local Air Traffic Control
			}
			
		}
		
		DIALOG_BOX
		{
			condition = PARAMETER_COMPLETED
			parameter = RequestLandingSite3
			
			position = CENTER
			
			TEXT
			{
				text = Trans Flight, we have you on approach. You are cleared for landing. On touchdown proceed to the indicated airport terminal for cargo unloading. Directions have been transmited to you.
				fontSize = 20
				textColor = #BADA55
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredGAP/Assets/Characters/@/site3ATCImage
				characterName = Local Air Traffic Control
			}
			
		}

		DIALOG_BOX
		{
			condition = PARAMETER_COMPLETED
			parameter = SafetyCheck
			position = CENTER
			title = <b>Wonderful News</b>
			textColor = #BADA55
			
			TEXT
			{
				text = <color=#BADA55>The Secretay Genreal's office has been informed of your success. We desprately needed to unload... err, I mean transfer that much needed valuable cargo shipment. We would like to thank you for providing the time and effort to make this flight happen.</color>    
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredGAP/Assets/Characters/@/UKatc
				characterName = United Knations Liason
			}
			
		}

		DIALOG_BOX
		{
			condition = CONTRACT_FAILED
			
			position = CENTER
			title = <b>Sometimes Things Go Wrong</b>
			titleColor = #FF0000
			
			TEXT
			{
				text = <color=#FF0000>We are very disappointed in by your recent set back. The Secretay Genreal's office has been informed of the incident.</color>    
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredGAP/Assets/Characters/@/UKatc
				characterName = United Knations Liason
			}
			
		}		

	}

//PARAMETERS FOR CONTRACT COMPLETION
    //Craft definition
	PARAMETER
	{
		name = VesselParameterGroup
		type = VesselParameterGroup
		title = Your aircraft must meet mission requirements and goals
		
		define = @/craft
		dissassociateVesselsOnContractCompletion = true

		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			title = have two certified pilots
			
			trait = Pilot
			minCrew = 2
		
			disableOnStateChange = false
			hideChildren = true

		}
		
		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			title = have a United Knations Transponder part on the aircraft
			part = UKTransponder
			disableOnStateChange = false
		}

		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			title = have @/payloadParts part(s) from the payload category 
			minCount = @/payloadParts
			category = Payload
			disableOnStateChange = false
		}
		
		PARAMETER
		{
			name = ReachState
			type = ReachState
			title = start from the KSC runway			
			targetBody = Kerbin
			biome = Runway
			situation = PRELAUNCH
			maxSpeed = 0.0
			disableOnStateChange = false
			hideChildren = true
		}
		
	}
	
	PARAMETER
	{
		name = RequestTakeoffLaunch
		type = Duration
		duration = 5s
		preWaitText = request clearance for takeoff:
		waitingText = requesting clearance for takeoff: 
		completionText = be cleared for takeoff
		completeInSequence = true
		disableOnStateChange = true
	}
	
// -----------------------------------------------------------------	
// Trip to Cargo Pick up
// -----------------------------------------------------------------

	PARAMETER
	{
		name = RequestLandingSite2
		type = VesselParameterGroup
		vessel = @/craft
		completeInSequence = true
		disableOnStateChange = true
		hideChildren = true
		hidden = true
		
		PARAMETER
		{
			name = VisitWaypoint
			type = VisitWaypoint
			index = 0
			distance = 19000
			hideOnCompletion = true
			completeInSequence = true
			disableOnStateChange = false
			hideChildren = true
			hidden = true
		}
	}

//Navigate to waypoint requirement include landing to a complete stop
    //Contract Goals
	PARAMETER
	{
		name = LandingSite2
		type = VesselParameterGroup
		title = complete flight to @KSRGAP:siteFullName.ElementAt(@/srcSite)
		vessel = @/craft
		disableOnStateChange = true
		hideVesselName = true
		completeInSequence = true
	
		PARAMETER
		{
			name = ReachState
			type = ReachState
			title = land at @KSRGAP:siteName.ElementAt(@/srcSite) runway
			notes = land and move to within 100 meters of the terminal
			targetBody = Kerbin
			situation = LANDED
			maxSpeed = 0.0
			disableOnStateChange = false
			hideChildren = true
		}	

		PARAMETER
		{
			name = Site2Terminal
			type = VisitWaypoint
			title = then taxi to the terminal and stop
			index = 1
			distance = 100
			horizontalDistance = 100
			showMessages =  true
						  
			disableOnStateChange = false
					  
   
		}
		PARAMETER
		{
			name = Duration
			type = Duration
			
			duration = 30s
			preWaitText = wait for cargo loading to complete for:
			waitingText = cargo loading underway now:
			completionText = cargo loading completed!

			completeInSequence = true
			disableOnStateChange = true			
			
		}
	}

	PARAMETER
	{
		name = RequestTakeoffSite2
		type = Duration		
		duration = 5s
		preWaitText = request clearance for takeoff:
		waitingText = requesting clearance for takeoff: 
		completionText = be cleared for takeoff
		completeInSequence = true
		disableOnStateChange = true
	}
	
// -----------------------------------------------------------------	
// Trip to Cargo Drop off
// -----------------------------------------------------------------

	PARAMETER
	{
		name = RequestLandingSite3
		type = VesselParameterGroup
		vessel = @/craft
		completeInSequence = true
		disableOnStateChange = true
		hideChildren = true
		hidden = true
		
		PARAMETER
		{
			name = VisitWaypoint
			type = VisitWaypoint
			index = 2
			distance = 19000
			hideOnCompletion = true
			completeInSequence = true
			disableOnStateChange = false
			hideChildren = true
			hidden = true
		}
	}

	PARAMETER
	{
		name = LandingSite3
		type = VesselParameterGroup
		title = complete flight to @KSRGAP:siteFullName.ElementAt(@/dstSite)
		vessel = @/craft
		disableOnStateChange = true
		hideVesselName = true
		completeInSequence = true
	
		PARAMETER
		{
			name = ReachState
			type = ReachState
			title = land at @KSRGAP:siteName.ElementAt(@/dstSite) runway
			notes = land and move to within 100 meters of the terminal
			targetBody = Kerbin
			situation = LANDED
			maxSpeed = 0.0
			disableOnStateChange = false
			hideChildren = true
		}	

		PARAMETER
		{
			name = Site3Terminal
			type = VisitWaypoint
			title = then taxi to the terminal and stop
			index = 3
			distance = 100
			horizontalDistance = 100
			showMessages =  true
			disableOnStateChange = false
		}

		PARAMETER
		{
			name = Duration
			type = Duration
			
			duration = 30s
			preWaitText = wait for cargo offloading to complete for:
			waitingText = cargo offloading underway now:
			completionText = cargo offloading completed!

			completeInSequence = true
			disableOnStateChange = true			
			
		}		

	}

//Recovery Parameter - Craft & Kerbal Safety Check

	PARAMETER
	{
		name = SafetyCheck
		type = All
		title = safely
		completeInSequence = true
		disableOnStateChange = true
		
		PARAMETER
		{
			name = KerbalDeaths
			type = KerbalDeaths
			title = without killing your crew
			vessel = @/craft
			hideChildren = true
		}
	
		PARAMETER
		{
			name = VesselNotDestroyed
			type = VesselNotDestroyed
			title = without destroying your aircraft
			vessel = @/craft
		}
	}
}



	



	