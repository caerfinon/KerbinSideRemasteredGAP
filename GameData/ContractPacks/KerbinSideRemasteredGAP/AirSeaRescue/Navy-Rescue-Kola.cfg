// -----------------------------------------------------------------
//	CONTRACT:  KSRGAP-Navy-Kola-Rescue - United Knations Navy - United Knations Navy - Rescue Mission
//	Author: Caerfinon 
//	Credits: 
//	{
//		Original GAP: Author - inigma
//		Original Kerbin side GAP: Author - Keniamin 
// 		Original concepts:  Author - TranceaddicT - from fork of GAP https://github.com/7ranceaddic7/GAP 
//	}
// -----------------------------------------------------------------

CONTRACT_TYPE
{

//CONTRACT DESCRIPTION

	name = KSRGAP-Navy-Kola-Rescue
	title = Navy Kola Island Rescue
	group = United Knations Navy
	agent = United Knations Navy
	sortKey = N3
	description = NAVY RESCUE: We have received a mayday from @/kerbalsInDistress.First() who reported @/distressReport and had to eject. Begin recovery operations immediately and return the pilot to the naval air station at Kola Island
	
	genericDescription = NAVY RESCUE: We have received a mayday from a pilot reporting an emergency who had to eject. Begin recovery operations immediately and return the pilot to the naval air station at Kola Island 	
	
	synopsis = Rescue the Pilot and return to base. 

	notes = This mission can begin at any airport. You can use a seplane, a helicopter or other VTOL craft. Once you have the lost pilot, return to Kola Island Naval Air Station

	completedMessage = Navy Rescue Mission Completed! You have our greast thanks, Navy pilots are hard to come by.

    //Contract Limits
	maxCompletions = 0
	maxSimultaneous = 1
    //weight = 10.0

	autoAccept = false
	declinable = true
	cancellable = true

	minExpiry = 1.0
	maxExpiry = 1.0
	deadline = 0

    //Contract Reward Modifiers
	prestige = Trivial
	targetBody = Kerbin

//Contract Rewards
	rewardFunds = @KSRGAP:rewardBaseValue * 1.6 * Random(1.0,1.15)
	advanceFunds = (@/rewardFunds * 0.25 )
	rewardReputation = 1
    rewardScience = 0

//Contract Penalties
	failureFunds =  (@/rewardFunds * 1.15) * Random(1.0, 1.25)  
	failureReputation = 10


//REQUIREMENTS FOR CONTRACT TO APPEAR


	REQUIREMENT
	{
		name = Expression
		type = Expression
		title = Flight Progess Level
		expression = $ksrgapFlightProgress >= 1
	}
	
	//Flight for Navy Certifications
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		
		contractType = KSRGAP-Navy-Certification1
		minCount = 1

	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		
		contractType = KSRGAP-Navy-Certification2
		minCount = 1

	}

//After mission is complete wait 7 day before offering it again	
	REQUIREMENT
	{
		title = Cool down timer 7 day
		name = CompleteContract
		type = CompleteContract
		minCount = 0
		contractType = KSRGAP-Navy-Kola-Rescue
		cooldownDuration = 7d
	}

//DATA NODES TO PROCESS FOR CONTRACT USE

//Contract Specific VesselParameterGroup Definition Key (to prevent conflict with other active contracts)
	DATA
	{
		type = string
		
		craft = KSRGAPNavyKolaRescue
		
	}
//Navy Observer-------------
//New Gender selection
// Randomly select 0 (male) or 1 (female)
	DATA
	{
		type = int
		obsGenderType = Random(0,1)
	}
	
	DATA
    {
        type = bool
        obsIsFemale = @/obsGenderType == 1
    }

//Rank List
	DATA
	{
		type = List<string>
		
		ObsrankList = [ "Mid. " , "Ltjg. " , "Lt. "]
		
	} 

 //List of Navy Observer Team Members
	
	DATA
	{
		type = string
		
		ObserverRank = @/ObsrankList.Random()
		ObserverKerbal1 = @ObserverRank + RandomKerbalName(@/obsIsFemale ? Female : Male)
		
		hidden = true
		
	}
	
	DATA
	{
		type = List<Kerbal>
		
		kerbalsNavyObserver = [ NewKerbal( @/obsIsFemale ? Female : Male, @/ObserverKerbal1 , "ServiceKerbal" ) ]
		
		hidden = true
		
	}
	
// Rescue target ---------------------------------
// Randomly select 0 (male) or 1 (female)
	DATA
	{
		type = int
		rankGenderType = Random(0,1)
	}
	
	DATA
    {
        type = bool
        rankIsFemale = @/rankGenderType == 1
    }


//Rank List
	DATA
	{
		type = List<string>
		
		rankList = [ "Lt. " , "Cdr. " , "Capt. "]
		
	}
	
//Selected Rank
	DATA
	{
		type = string
		
		rank = @/rankList.Random()
		rankedKerbal = @rank + RandomKerbalName(@/rankIsFemale ? Female : Male)
		
		hidden = true
		
	}

//List of Kerbals in Distress
	DATA
	{
		type = List<Kerbal>
		
		kerbalsInDistress = [ NewKerbal( @/rankIsFemale ? Female : Male, @/rankedKerbal , "ServiceKerbal" ) ]
		
	hidden = true
	
	}
	
//Pick 1 Zone for Distress Location for Use by Waypoint Generator Behavior
	DATA
	{
		type = List<int>
		
		zoneList = [ 0, 1 , 2 , 3 , 4 ].Random(1)
		
		hidden = true

	}
	
	
//List of Possible NAS ATC characters
	DATA
	{
		type = List<string>
		
		NASatctypes = ["NAS_ATC_M" ,"NAS_ATC_M"]
		
		hidden = true 
	}
	

	
//Pick One Random NAS ATC character to Use for Contract
	DATA
	{
		type = string
		
		NASatc = @/NASatctypes.Random()
		
		hidden = true
		
	}
	
	
//List of Possible Distress Reports
	DATA
	{
		type = List<string>
		
		distressReportData = ["loss of all power" , "an in-flight fire" , "instrumentation failrue", "a bird strike causing engine failure", "aircraft structural failure"]
		
		hidden = true 
	}
	

	
//Pick One Random Distress Report to Use for Contract
	DATA
	{
		type = string
		
		distressReport = @/distressReportData.Random()
		
		hidden = true
		
	}
	
//Distress Location Pulled from Waypoint Generator Behaviour
	DATA
	{
		type = double
		
		distressLat = @/SeaZones.Waypoints().ElementAt(5).Latitude()
		distressLon = @/SeaZones.Waypoints().ElementAt(5).Longitude()
		
		hidden = true 

	}


//BEHAVIOURS TO DO WHEN CREATING CONTRACT
	//Kerbals to remove 
	BEHAVIOUR
	{
		name = RemoveKerbal
		type = RemoveKerbal
		kerbal = @/kerbalsInDistress.ElementAt(0)
		kerbal = @/kerbalsNavyObserver.ElementAt(0)
	}

    // Spawn Navy Observer
	BEHAVIOUR
	{
		name = SpawnPassengers
		type = SpawnPassengers
		
		kerbal = @/kerbalsNavyObserver.ElementAt(0)
		kerbalType = Unowned
		removePassengers = true
	}

    //Spawn Kerbal to be rescued
	BEHAVIOUR
	{
		name = SpawnKerbal
		type = SpawnKerbal

		KERBAL
		{
			kerbal = @/kerbalsInDistress.ElementAt(0)
			kerbalType = Unowned
			owned = false
			addToRoster = false
			lat = @/distressLat
			lon = @/distressLon
			heading = 300

		}
		
	}
	
    //Generate Sea Zones and Define Random Waypoints
	BEHAVIOUR
	{
		name = SeaZones
		type = WaypointGenerator
		
		//Rescue Areas
		
		PQS_CITY
		{
			name = KSC Sea North Central Waypoint
			
			targetBody = Kerbin
			pqsCity = IslandAirfield 
			pqsOffset = -1847.25488069029, -20058.7598335702, -453.396403818988
			
			hidden = true
			
		}		

		PQS_CITY
		{
			name = KSC Sea Central Central Waypoint
			
			targetBody = Kerbin
			pqsCity = IslandAirfield 
			pqsOffset = 20550.8508273184, 1062.93579726917, -468.244493385362
			
			hidden = true
			
		}
		
		PQS_CITY
		{
			name = KSC Sea South Central Waypoint
			
			targetBody = Kerbin
			pqsCity = IslandAirfield 
			pqsOffset = 29140.5802921804, 15569.5873430977, -1025.49583004066
			
			hidden = true
			
		}
		
		PQS_CITY
		{
			name = East Islands Sea Central Waypoint
			
			targetBody = Kerbin
			pqsCity = IslandAirfield 
			pqsOffset = -13479.0987451144, 22129.2856859656, -674.933362233103
			
			hidden = true
			
		}
		
		PQS_CITY
		{
			name = South Islands Sea Central Waypoint
			
			targetBody = Kerbin
			pqsCity = IslandAirfield 
			pqsOffset = 4175.6529485127, 49157.8040008561, -2146.85443912575
			
			hidden = true
			
		}
		
		//Mayday Random Waypoint Within Random Sea Zone
	    RANDOM_WAYPOINT_NEAR
		{
		
			name = Mayday Search Area
			icon = ContractPacks/KerbinSideRemasteredGAP/Assets/Icons/Rescue
			
			targetBody = Kerbin
			nearIndex = @/zoneList.ElementAt(0)
			maxDistance = 40000.0
			minDistance = 15000.0
			underwater = true
			altitude = -0.1
		
		}
		
		//Base landing zones
        WAYPOINT
		{
			name = Kola Island Runway
			icon = ContractPacks/KerbinSideRemasteredGAP/Assets/Icons/Airport
                         
			targetBody = Kerbin
			latitude = -4.15968561172485
			longitude = -72.1093521118164
			altitude = 0.0
		}
		
	    WAYPOINT
		{
		
			name = Kola Island Harbour
			icon = ContractPacks/KerbinSideRemasteredGAP/Assets/Icons/Harbour
                         
            targetBody = Kerbin
			latitude = -4.24816249697431
			longitude = -72.2479171606174
			altitude = 0.0
		
		}
		
	}
	
	BEHAVIOUR
	{
		name = DialogBox
		type = DialogBox
		
		DIALOG_BOX
		{
			condition = PARAMETER_COMPLETED
			parameter = RequestTakeoff
			
			position = CENTER
			title = <b>Take Off</b>
			titleColor = #BADA55
			TEXT
			{
				text = <color=#BADA55><b>NAS ATC:</b> NAV RESCUE, you are cleared to for depature, set heading to the search zone and proceed to contact, squawk one six four two. Good hunting.</color> 
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredGAP/Assets/Characters/@/NASatc
				characterName = NAS ATC
			}
			
		}
		DIALOG_BOX
		{
			condition = PARAMETER_COMPLETED
			parameter = SearchArea
			
			position = CENTER
			title = <b>Mayday Search Area</b>
			titleColor = #BADA55
			
			TEXT
			{
				text = <color=#BADA55><b>NAS ATC:</b> NAV RESCUE, You have reached the search zone. Copy. Find and recover the package.</color>  
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredGAP/Assets/Characters/@/NASatc
				characterName = NAS ATC
			}
		}
		
		DIALOG_BOX
		{
			condition = PARAMETER_COMPLETED
			parameter = RescuedPilot
			
			position = CENTER
			title = <b>Mayday Search Area</b>
			titleColor = #BADA55
			
			TEXT
			{
				text = <color=#BADA55><b>NAS ATC:</b> NAV RESCUE, Package secure. Copy. Congratulations on the recovery, we hate to lose Navy pilots. You are cleared to head to Kola Island and land.</color>  
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredGAP/Assets/Characters/@/NASatc
				characterName = NAS ATC
			}
		}

		DIALOG_BOX
		{
			condition = PARAMETER_COMPLETED
			parameter = LandRunway
			position = CENTER
			title = <b>Land at Kola Island Naval Air Station</b>
			titleColor = #BADA55
			
			TEXT
			{
				text = <color=#BADA55><b>NAS ATC:</b> NAV RESCUE, Welcome home. Excellent job. Secure your aircraft and get dried off before mission debriefing.</color>
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredGAP/Assets/Characters/@/NASatc
				characterName = NAS ATC
			}

		}
		DIALOG_BOX
		{
			condition = PARAMETER_COMPLETED
			parameter = LandHarbour
			position = CENTER
			title = <b>Dock at Kola Island Naval Air Station</b>
			titleColor = #BADA55
			
			TEXT
			{
				text = <color=#BADA55><b>NAS ATC:</b> NAV RESCUE, Welcome home. Excellent job. Drop anchor and come ashore but get dried off before mission debriefing.</color>
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredGAP/Assets/Characters/@/NASatc
				characterName = NAS ATC
			}

		}
		
		DIALOG_BOX
		{
			condition = CONTRACT_FAILED
			
			position = CENTER
			title = <b>Sometimes Things Go Wrong</b>
			titleColor = #BADA55
			
			TEXT
			{
				text = <color=#BADA55><b>NAS ATC:</b> NAV RESCUE, Mission scrubed! Repeat. Mission has been scrubed.... and you were doing so well.</color>    
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredGAP/Assets/Characters/@/NASatc
				characterName = NAS ATC
			}
		}		

	}
	
//PARAMETERS FOR CONTRACT COMPLETION

    //Craft definition
	PARAMETER
	{
		name = RequestTakeoff
		type = VesselParameterGroup
		title = Your aircraft must meet mission requirements and goals
		define = @/craft

		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			title = have a certified pilot
			
			trait = Pilot
			minCrew = 1
			completeInSequence = true
			disableOnStateChange = false
			hideChildren = true

		}
		
		PARAMETER
		{
			name = MedicalCrew
			type = Any
			disableOnStateChange = true
	
			PARAMETER
			{
				name = HasCrew
				type = HasCrew
				title = have a medical Scientist
				
				trait = Scientist
				minCrew = 1
			
				disableOnStateChange = false
				hideChildren = true

			}

			PARAMETER:NEEDS[UmbraSpaceIndustries/MKS]
			{
				name = HasCrew
				type = HasCrew
				title = or have a Medic
				
				trait = Medic
				minCrew = 1
			
				disableOnStateChange = false
				hideChildren = true

			}
		}

		PARAMETER
		{
			name = HasCrewCapacity
			type = HasCrewCapacity
			title = have seating for the Navy personel
			completeInSequence = true			
			minCapacity = 4
			
			disableOnStateChange = false
			
		}
		
		//Passenger Manifest - Load Passengers
		PARAMETER
		{
			name = All
			type = All
			title = ensure the Navy Observer is on board
			completeInSequence = true

			PARAMETER
			{
				name = HasPassengers
				type = HasPassengers
				title = @kerbal.First()
		
				ITERATOR
				{
					type = Kerbal
					kerbal = @/kerbalsNavyObserver
					
				}
				
				hideChildren = true
				
			}
		}
	}

    //Contract Goals
	PARAMETER
	{
		name = SearchArea
		type = VesselParameterGroup
		title = fly to the search area and land
		notes = pilot to rescue is within 500 meters of marker
		disableOnStateChange = true
		hideChildren = true
		vessel = @/craft
		
		PARAMETER
		{
			name = VisitWaypoint
			type = VisitWaypoint
			
			index = 5
			distance = 500
			showMessages = true
			hideOnCompletion = true
			
			disableOnStateChange = true
			hideChildren = true
			
		}
	}
	
	PARAMETER
	{
		name = RescuedPilot
		type = All
		title = rescue the Navy pilot
		hideChildren = true
		completeInSequence = true
		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			minCrew = 2
			disableOnStateChange = false
			hidden = true
		}
		
		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			kerbal = @/kerbalsInDistress
			disableOnStateChange = false
		}

	}
	

 //Recovery Parameter - Landing
	PARAMETER
	{
		name = NavyLand
		type = Any
		title = return to Kola Island
		notes = be stoopped with in 690 meters of either marker
		completeInSequence = true
		disableOnStateChange = true
		PARAMETER
		{
			name = LandRunway
			type = All
			title = at either the base runway
			
			PARAMETER
			{
				name = HasCrew
				type = HasCrew
				
				kerbal = @/kerbalsInDistress
				
				completeInSequence = true
				disableOnStateChange = false
				hidden = true 
			
			}			
			
			PARAMETER
			{			            
				name = ReachState   
				type = ReachState

				situation = LANDED
				maxSpeed = 0.0
				
				completeInSequence = true
				disableOnStateChange = false
				hideChildren = true
				hidden = true
				
			}
			
			PARAMETER
			{
				name = VisitWaypoint
				type = VisitWaypoint
				index = 6

				distance = 690
				hideOnCompletion = true
				
				completeInSequence = true
				disableOnStateChange = false
				hideChildren = true
				hidden = true
				
			}
		}
		PARAMETER
		{
			name = LandHarbour
			type = All
			title = or the base harbour
			
			PARAMETER
			{
				name = HasCrew
				type = HasCrew
				kerbal = @/kerbalsInDistress
				completeInSequence = true
				disableOnStateChange = false
			    hidden = true 
			}						
			
			PARAMETER
			{			            
				name = ReachState
				type = ReachState

				situation = SPLASHED
				maxSpeed = 0.0
				
				completeInSequence = true
				disableOnStateChange = false
				hideChildren = true
				hidden = true
				
			}
			
			PARAMETER
			{
				name = VisitWaypoint
				type = VisitWaypoint
				index = 7

				distance = 690
				hideOnCompletion = true
				
				completeInSequence = true
				disableOnStateChange = false
				hideChildren = true
				hidden = true
				
			}
		}
	}


	//Recovery Parameter - Craft & Kerbal Safety Check
	PARAMETER
	{
		name = All
		type = All
		title = safely
		completeInSequence = true
		disableOnStateChange = false
		
		PARAMETER
		{
			name = VesselNotDestroyed
			type = VesselNotDestroyed
			title = without destroying your aircraft
			vessel = @/craft
			hideChildren = true
		}

		PARAMETER
		{
			name = KerbalDeaths
			type = KerbalDeaths
			title = or killing the observer
			kerbal = @/kerbalsNavyObserver
			hideChildren = true
		}
		
		PARAMETER
		{
			name = KerbalDeaths
			type = KerbalDeaths
			title = or killing the rescued pilot
			kerbal = @/kerbalsInDistress
			hideChildren = true	
		}
	}
	
//Recovery Parameter - Recover Kerbals
	PARAMETER
	{
		name = All
		type = All
		title = and recover the observer and rescued pilot
		notes = the Navy personnel can EVA and be recovered allowing the vessel to be recovered at a base of your choice 

		PARAMETER
		{
			name = RecoverKerbal
			type = RecoverKerbal
			title = @kerbal.First()
	
			ITERATOR
			{
				type = Kerbal
				kerbal = @/kerbalsNavyObserver
			}
			
			hideChildren = true
			
		}
		PARAMETER
		{
			name = RecoverKerbal
			type = RecoverKerbal
			title = @kerbal.First()
	
			ITERATOR
			{
				type = Kerbal
				kerbal = @/kerbalsInDistress
				
			}
			
			hideChildren = true
			
		}
	}
	
}