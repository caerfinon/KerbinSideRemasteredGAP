// -----------------------------------------------------------------
//	CONTRACT:  KSRGAP-Navy-Meeda-Patrol - United Knations Navy - United Knations Navy - Patrol Mission
//	Author: Caerfinon 
//	Credits: 
//	{
//		Original GAP: Author - inigma
//		Original Kerbin side GAP: Author - Keniamin 
// 		Original concepts:  Author - TranceaddicT - from fork of GAP https://github.com/7ranceaddic7/GAP 
//	}
// -----------------------------------------------------------------

CONTRACT_TYPE
{
	
//CONTRACT DESCRIPTION

	name = KSRGAP-Navy-Meeda-Patrol
	title = Navy Meeda Patrol
	group = United Knations Navy
	agent = United Knations Navy
	sortKey = N7
	description = NAVY Patrol: We want you to go on a patrol and conduct @/patrolReport operations. Follow the coordinates to the patrol zone and then return to the naval air station at Meeda
	
	genericDescription = NAVY Patrol: We want you to go on a patrol and conduct routine reconnaissance operations. Follow the coordinates to the patrol zone and then return to the naval air station at Meeda	
	
	synopsis = Patrol the assigned area and return to base. 

	notes = This mission can be perfomed with an aircraft or naval surface vessel.

	completedMessage = Navy Partol Mission Completed! Thanks for your assistance, it is greatly appreciated. 

    //Contract Limits
	maxCompletions = 0
	maxSimultaneous = 1
    //weight = 10.0

	autoAccept = false
	declinable = true
	cancellable = true

	minExpiry = 1.0
	maxExpiry = 1.0
	deadline = 0

    //Contract Reward Modifiers
	prestige = Trivial
	targetBody = Kerbin

//Contract Rewards
  	advanceFunds = 2000.0
	rewardFunds = 16000.0
  	rewardReputation = 1.0
 	rewardScience = 0.0
	
//Contract Penalties
  	failureFunds = 2000.0
	failureReputation = 25.0


//REQUIREMENTS FOR CONTRACT TO APPEAR

	REQUIREMENT
	{
		name = Expression
		type = Expression
		title = Flight Progess Level
		expression = $ksrgapFlightProgress >= 6
	}
	
	//Flight for Navy Certifications
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		
		contractType = KSRGAP-Navy-Certification1
		minCount = 1

	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		
		contractType = KSRGAP-Navy-Certification2
		minCount = 1

	}


//DATA NODES TO PROCESS FOR CONTRACT USE
//Contract Specific VesselParameterGroup Definition Key (to prevent conflict with other active contracts)
	DATA
	{
		type = string
		
		craft = KSRGAPNavyMeedaPatrol
		
	}
	
// Randomly select 0 (male) or 1 (female)
	DATA
	{
		type = int
		genderType = Random(0,1)
	}
	
	DATA
    {
        type = bool
        isFemale = @/genderType == 1
    }
	
//Rank List
	DATA
	{
		type = List<string>
		
		ObsrankList = [ "Mid. " , "Ltjg. " , "Lt. "]
		
	} 

 //List of Navy Observer Team Members
	
	DATA
	{
		type = string
		
		ObserverRank = @/ObsrankList.Random()
		ObserverKerbal1 = @ObserverRank + RandomKerbalName(@/isFemale ? Female : Male)
		
		hidden = true
		
	}	
	
	DATA
	{
		type = List<Kerbal>
		
		kerbalsNavyObserver = [ NewKerbal( @/isFemale ? Female : Male, @/ObserverKerbal1 , "Pilot" ) ]
		
		hidden = true
		
	}
	
//Pick 1 Patrol Zone for Use by Waypoint Generator Behavior
	DATA
	{
		type = List<int>
		
		zoneList = [ 0, 1 , 2 , 3 , 4 ].Random(1)
		
		hidden = true

	}
	
	
//List of Possible NAS ATC characters
	DATA
	{
		type = List<string>
		
		NASatctypes = ["NAS_ATC_M" ,"NAS_ATC_M"]
		
		hidden = true 
	}
	

	
//Pick One Random NAS ATC character to Use for Contract
	DATA
	{
		type = string
		
		NASatc = @/NASatctypes.Random()
		
		hidden = true
		
	}
	
	
//List of Possible Patrol Reports
	DATA
	{
		type = List<string>
		
		patrolReportData = ["smuggler interdiction" , "protection of shipping lanes" , "routine reconnaissance", "anti-piracy"]
		
		hidden = true 
	}
	
//Pick Patrol Report
	DATA
	{
		type = string
		
		patrolReport = @/patrolReportData.Random()
		
		hidden = true 
	}


//BEHAVIOURS TO DO WHEN CREATING CONTRACT
	//Kerbals to remove 
	BEHAVIOUR
	{
		name = RemoveKerbal
		type = RemoveKerbal
		kerbal = @/kerbalsNavyObserver.ElementAt(0)
	}

	// Spawn Navy Observer
	BEHAVIOUR
	{
		name = SpawnPassengers
		type = SpawnPassengers
		
		kerbal = @/kerbalsNavyObserver.ElementAt(0)
		kerbalType = Crew
		removePassengers = true
	}
 	
    //Generate Sea Zones and Define Random Waypoints
	BEHAVIOUR
	{
		name = SeaZones
		type = WaypointGenerator
		
		//Patrol Zones
		
        WAYPOINT
		{
			name = Patrol Zone Alpha
            icon = ContractPacks/KerbinSideRemasteredGAP/Assets/Icons/Patrol        
            targetBody = Kerbin
			latitude = 56.6723731494836
			longitude = -103.683679198658	
			altitude = 0.0
			hidden = true
			
		}		

        WAYPOINT
		{
			name = Patrol Zone Bravo
            icon = ContractPacks/KerbinSideRemasteredGAP/Assets/Icons/Patrol              
            targetBody = Kerbin
			latitude = 41.7141049278962
			longitude = -87.3175420331056
			altitude = 0.0
			hidden = true
			
		}	
		
        WAYPOINT
		{
			name = Patrol Zone Charlie
            icon = ContractPacks/KerbinSideRemasteredGAP/Assets/Icons/Patrol              
            targetBody = Kerbin
			latitude = -1.46356965816956		
			longitude = -96.6267780757089
			altitude = 0.0
			hidden = true
			
		}	
		
        WAYPOINT
		{
			name = Patrol Zone Delta
            icon = ContractPacks/KerbinSideRemasteredGAP/Assets/Icons/Patrol              
            targetBody = Kerbin
			latitude = 21.7949156516448	
			longitude = -102.405166526076	
			altitude = 0.0
			hidden = true
			
		}	
		
        WAYPOINT
		{
			name = Patrol Zone Echo
            icon = ContractPacks/KerbinSideRemasteredGAP/Assets/Icons/Patrol              
            targetBody = Kerbin
			latitude = -1.46356965816956		
			longitude = -96.6267780757089
			altitude = 0.0
			hidden = true
			
		}	
		
		//Patrol Checkpoints 
	    RANDOM_WAYPOINT_NEAR
		{
		
			name = Checkpoint Alpha
			icon = ContractPacks/KerbinSideRemasteredGAP/Assets/Icons/Patrol
			
			targetBody = Kerbin
			nearIndex = @/zoneList.ElementAt(0)
			minDistance = 15000.0
			maxDistance = 50000.0
			underwater = true
			altitude = -0.1
		
		}
		
	    RANDOM_WAYPOINT_NEAR
		{
		
			name = Checkpoint Bravo
			icon = ContractPacks/KerbinSideRemasteredGAP/Assets/Icons/Patrol
			
			targetBody = Kerbin
			nearIndex = @/zoneList.ElementAt(0)
			minDistance = 15000.0
			maxDistance = 50000.0
			underwater = true
			altitude = -0.1
		
		}
		
	    RANDOM_WAYPOINT_NEAR
		{
		
			name = Checkpoint Charlie
			icon = ContractPacks/KerbinSideRemasteredGAP/Assets/Icons/Patrol
			
			targetBody = Kerbin
			nearIndex = @/zoneList.ElementAt(0)
			minDistance = 15000.0
			maxDistance = 50000.0
			underwater = true
			altitude = -0.1
		
		}
		
	    RANDOM_WAYPOINT_NEAR
		{
		
			name = Checkpoint Delta
			icon = ContractPacks/KerbinSideRemasteredGAP/Assets/Icons/Patrol
			
			targetBody = Kerbin
			nearIndex = @/zoneList.ElementAt(0)
			minDistance = 15000.0
			maxDistance = 50000.0
			underwater = true
			altitude = -0.1
		
		}
		
	    RANDOM_WAYPOINT_NEAR
		{
		
			name = Checkpoint Echo
			icon = ContractPacks/KerbinSideRemasteredGAP/Assets/Icons/Patrol
			
			targetBody = Kerbin
			nearIndex = @/zoneList.ElementAt(0)
			minDistance = 15000.0
			maxDistance = 50000.0
			underwater = true
			altitude = -0.1
		
		}

		//Base landing zones
        WAYPOINT
		{
			name = Meeda Runway
			icon = ContractPacks/KerbinSideRemasteredGAP/Assets/Icons/Airport
                         
            targetBody = Kerbin
			latitude = 37.86918259
			longitude = -109.843895
			altitude = 0.0
		}
		
	    WAYPOINT
		{
		
			name = Meeda Harbour
			icon = ContractPacks/KerbinSideRemasteredGAP/Assets/Icons/Harbour
                         
            targetBody = Kerbin
			latitude = 37.8991182733726
			longitude = -110.057695020817
			altitude = 0.0
		
		}
		
		//Seaplane landing Optional		
	    RANDOM_WAYPOINT_NEAR
		{
		
			name = Checkpoint Foxtrot
			icon = ContractPacks/KerbinSideRemasteredGAP/Assets/Icons/Seaplane
			parameter = EchoComplete
			
			targetBody = Kerbin
			nearIndex = @/zoneList.ElementAt(0)
			minDistance = 15000.0
			maxDistance = 50000.0
			underwater = true
			altitude = -0.1
		
		}
	}
	
	BEHAVIOUR
	{
		name = DialogBox
		type = DialogBox
		
		DIALOG_BOX
		{
			condition = PARAMETER_COMPLETED
			parameter = AtWaypointA
			
			position = CENTER
			title = <b>Reached your patrol area</b>
			titleColor = #BADA55
			
			TEXT
			{
				text = <color=#BADA55><b>NAS ATC:</b> NAV PATROL, You have reached your patrol zone. Complete your checkpoints in order and return to base.</color>  
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredGAP/Assets/Characters/@/NASatc
				characterName = NAS ATC
			}
		}

		DIALOG_BOX
		{
			condition = PARAMETER_COMPLETED
			parameter = NavyLand
			position = CENTER
			title = <b>Meeda Naval Air Station</b>
			titleColor = #BADA55
			
			TEXT
			{
				text = <color=#BADA55><b>NAS ATC:</b> NAV PATROL, Welcome home. Excellent job. Stow your gear away before mission debriefing.</color>
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredGAP/Assets/Characters/@/NASatc
				characterName = NAS ATC
			}

		}
		
		DIALOG_BOX
		{
			condition = CONTRACT_FAILED
			
			position = CENTER
			title = <b>Sometimes Things Go Wrong</b>
			titleColor = #BADA55
			
			TEXT
			{
				text = <color=#BADA55><b>NAS ATC:</b> NAV PATROL, Mission scrubed! Repeat. Mission has been scrubed.... and you were doing so well.</color>    
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredGAP/Assets/Characters/@/NASatc
				characterName = NAS ATC
			}
		}		

	}
	
//PARAMETERS FOR CONTRACT COMPLETION

    //Craft definition
	PARAMETER
	{
		name = VesselParameterGroup
		type = VesselParameterGroup
		title = Your vessel must meet mission requirements and goals
		
		define = @/craft

		PARAMETER
		{
			name = HasCrewCapacity
			type = HasCrewCapacity
			title = have seating for crew and observer
			
			minCapacity = 2
			
			disableOnStateChange = false
			
		}

		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			title = have a certified pilot
			
			trait = Pilot
			minCrew = 1
		
			disableOnStateChange = false
			hideChildren = true

		}
		
		//Passenger Manifest - Load Passengers
		PARAMETER
		{
			name = All
			type = All
			
			title = ensure the Navy Observer is on board
			
			PARAMETER
			{
				name = HasPassengers
				type = HasPassengers
				title = @kerbal.First()
		
				ITERATOR
				{
					type = Kerbal
					kerbal = @/kerbalsNavyObserver
					
				}
				
				hideChildren = true
				
			}

		}
		
		completeInSequence = true

	}

//Contract Goals
	
	// Mission Goals
	PARAMETER
	{
		name = All
		type = All
		title = Complete patrol locations in sequence
		hideChildren = false

		PARAMETER
		{
			name = All
			type = All
			title = patrol within 5kms of location Alpha
			hideChildren = true

			PARAMETER
			{
				name = AtWaypointA
				type = VisitWaypoint
				index = 5
				distance = 5000
				hideOnCompletion = true
				showMessages = true
				disableOnStateChange = false
				
			}
			completeInSequence = true
			disableOnStateChange = true
		}
		PARAMETER
		{
			name = All
			type = All
			title = patrol within 5kms of location Bravo
			hideChildren = true

			PARAMETER
			{
				name = VisitWaypoint
				type = VisitWaypoint
				index = 6
				distance = 5000
				hideOnCompletion = true
				showMessages = true
				disableOnStateChange = false
							
			}
			completeInSequence = true
			disableOnStateChange = true
		}	

		PARAMETER
		{
			name = All
			type = All
			title = patrol within 5kms of location Charlie
			hideChildren = true
		
			PARAMETER
			{
				name = VisitWaypoint
				type = VisitWaypoint
				index = 7
				distance = 5000
				hideOnCompletion = true
				showMessages = true
				disableOnStateChange = false
				
			}
			completeInSequence = true
			disableOnStateChange = true
		}		
		
		PARAMETER
		{
			name = All
			type = All
			title = patrol within 5kms of location Delta
			hideChildren = true

			PARAMETER
			{
				name = VisitWaypoint
				type = VisitWaypoint
				index = 8
				distance = 5000
				hideOnCompletion = true
				showMessages = true
				disableOnStateChange = false
				
			}
			completeInSequence = true
			disableOnStateChange = true
		}
		
		PARAMETER
		{
			name = EchoComplete
			type = All
			title = patrol within 5kms of location Echo
			hideChildren = true

			PARAMETER
			{
				name = VisitWaypoint
				type = VisitWaypoint
				index = 9
				distance = 5000
				hideOnCompletion = true
				showMessages = true
				disableOnStateChange = false
				
			}
			completeInSequence = true
			disableOnStateChange = true
		}
		disableOnStateChange = true

	}
	
 //Recovery Parameter - Landing
	PARAMETER
	{
		name = NavyLand
		type = Any
		title = return to Meeda
		notes = be stoopped with in 690 meters of either marker
		
		PARAMETER
		{
			name = LandRunway
			type = All
			title = at either the base runway		
			
			PARAMETER
			{			            
				name = ReachState   
				type = ReachState

				situation = LANDED
				maxSpeed = 0.0

				disableOnStateChange = false
				hideChildren = true
				hidden = true
				
			}
			
			PARAMETER
			{
				name = VisitWaypoint
				type = VisitWaypoint
				index = 10

				distance = 690
				hideOnCompletion = false
				disableOnStateChange = false
				hideChildren = true
				hidden = true
				
			}
			
			disableOnStateChange = false
		}
		
		PARAMETER
		{
			name = LandHarbour
			type = All
			title = or the base harbour
			rewardFunds = 5000.0
			
			PARAMETER
			{			            
				name = ReachState   
				type = ReachState

				situation = SPLASHED
				maxSpeed = 0.0
				disableOnStateChange = false
				hideChildren = true
				hidden = true
				
			}
			
			PARAMETER
			{
				name = VisitWaypoint
				type = VisitWaypoint
				index = 11

				distance = 690
				hideOnCompletion = false
				disableOnStateChange = false
				hideChildren = true
				hidden = true
				
			}
			
			disableOnStateChange = false
			
		}
		
		completeInSequence = true
		disableOnStateChange = false

	}


///Recovery Parameter - Craft & Kerbal Safety Check
	PARAMETER
	{
		name = NavyLand
		type = All
		title = safely
		completeInSequence = true
		disableOnStateChange = false
		
		PARAMETER
		{
			name = VesselNotDestroyed
			type = VesselNotDestroyed
			title = without destroying your aircraft
			vessel = @/craft
			hideChildren = true
		}

		PARAMETER
		{
			name = KerbalDeaths
			type = KerbalDeaths
			title = or killing the observer
			kerbal = @/kerbalsNavyObserver
			hideChildren = true
		}
		
	}
	
//Recovery Parameter - Recover Kerbals
	PARAMETER
	{
		name = All
		type = All
		title = and recover the Navy Observer
		notes = the observer can EVA and be recoverd allowing the vessel to be recovered at a base of your choice 
		
		PARAMETER
		{
			name = RecoverKerbal
			type = RecoverKerbal
			title = @kerbal.First()
	
			ITERATOR
			{
				type = Kerbal
				kerbal = @/kerbalsNavyObserver
				
			}
			
			hideChildren = true
			
		}

	}

// Optional Seaplane Landing
	PARAMETER
	{
		name = All
		type = All
		title = Additional for Seaplanes (Optional)
		optional = true
		rewardReputation = 1.0
		rewardFunds = 8000.0
		disableOnStateChange = true

		
		PARAMETER
		{
			title = Be flying 
			name = ReachState
			type = ReachState
			situation = Flying
			disableOnStateChange = true
		}
		
		PARAMETER
		{
			name = Seaplane Landing
			type = All
			title = make a water landing
			completeInSequence = true
			disableOnStateChange = true


			PARAMETER
			{
				title = and come to a stop near location Foxtrot
				notes = within 500 meters of the marker
				name = ReachState
				type = ReachState
				hideChildren = true
				maxSpeed = 3.0
				situation = Splashed
				disableOnStateChange = false
				targetBody = @/targetBody
			}	
			
			PARAMETER
			{
				title = (Location Foxtrot is hidden until Echo is completed) 
				name = VisitWaypoint
				type = VisitWaypoint
				index = 12
				distance = 500
				horizontalDistance = 500
				showMessages = true
				disableOnStateChange = false
				targetBody = @/targetBody

			}			
		}					 
	}
	
}