// -----------------------------------------------------------------
//	CONTRACT:  KSRGAPX-SkyMed-2- SkyMed - SkyMed - Medevac flights to remote areas
//	Author: Caerfinon 
//	Credits:
//	{
//		Original GAP: Author - inigma
//		Original Kerbin side GAP: Author - Keniamin 
//		expression requirements: from from "Field Research" - Author - nightingale
//	}
// -----------------------------------------------------------------
CONTRACT_TYPE:NEEDS[KerbinSideRemasteredGapExtras]
{
//CONTRACT DESCRIPTION
	sortKey = KSRGAPXSM2
	name = KSRGAPX-SkyMed-2
	title = SkyMed Flight to @KSRGAP:stripName.ElementAt(@/fltLocationSelection)
	genericTitle = Medevac from remote airstrips 
	group = SkyMed
	agent = SkyMed

	description = A disaster has been declared in @/crashBiome.FullName() near @KSRGAP:stripName.ElementAt(@/fltLocationSelection)! The area has suffered @/disasterReason and kerbals need immediate medical assistance. @/agentKerbalName from KEMA will be coming with us on this misssion.
	genericDescription = A disaster has been declared requiring a Medevac flight to a nearby location with medical facilitities. A KEMA agent will travel with you to the Medevac Area. 
	synopsis = Fly to remote location to offer medical assistance to local Kerbals
	completedMessage = Flight Completed!&br;&br;Medical assistance rendered at @KSRGAP:stripName.ElementAt(@/fltLocationSelection)
	notes = The medivac site is a bit of a hike from the airfield. You should plan on bringing or prepositioning some type of transport to get them to the airstrip.

//Contract Limits
	maxCompletions = 0
	maxSimultaneous = 1
	autoAccept = false
	declinable = true
	cancellable = true
	minExpiry = 1.0
	maxExpiry = 1.0

//Contract Reward Modifiers
	prestige = Significant
	targetBody = Kerbin
	
//Contract Rewards

	rewardFunds = @KSRGAP:rewardBaseValue * 3 * Random(1.0,1.15)
	advanceFunds = (@/rewardFunds * 0.25 )
	rewardReputation = 2.0
    rewardScience = 0.0

//Contract Penalties
	failureFunds =  (@/rewardFunds * 1.15) * Random(1.0, 1.25)  
	failureReputation = 10 + ( @/numPatients) 
	
// -----------------------------------------------------------------	
// REQUIREMENTS FOR CONTRACT TO APPEAR
// -----------------------------------------------------------------	
//

// Requires that Flight progress in persistent storage be a value between 0 and x (depending on mods installed) 
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		title =  SkyMed Affiliation
		contractType = KSRGAPX-SkyMedIntroduction
		minCount = 1
	}

//After mission is complete wait 14 days before offering it again	
	REQUIREMENT
	{
		title = Cool down timer 14 days
		name = CompleteContract
		type = CompleteContract
		minCount = 0
		contractType = KSRGAPX-SkyMed-2
		cooldownDuration = 14d
	}

// -----------------------------------------------------------------	
//DATA NODES TO PROCESS FOR CONTRACT USE
// -----------------------------------------------------------------

// Pick a destination of medevac emergency location
	DATA
	{
		type = int
		fltLocationSelection = Random(0,19)
		hidden = true
	}
	
// Pick secondary destination for Medevac flight 
    DATA
	{
		type = List<string>
		site3codetypes = ["A" ,"B"]
		hidden = true
	}
	
	DATA
	{
		type = string
		site3code = @/site3codetypes.Random()
		hidden = true
	}
	
	DATA
	{
		type = bool
		isA = @/site3code == "A" 
	}
	
	
	DATA
	{
		type = int
		medevacSiteSelection =  @/isA ? @KSRGAP:stripRegionalA.ElementAt(@/fltLocationSelection) : @KSRGAP:stripRegionalB.ElementAt(@/fltLocationSelection)
		hidden = true
    }
	
//Rank List
	DATA
	{
		type = List<string>
		agentTitleList = [ "ERT ", "ERT Lead ", "Supervisor "]
		
	} 

// Randomly select 0 (male) or 1 (female)
	DATA
	{
		type = int
		genderType = Random(0,1)
	}

//create a bool for gender	
	DATA
    {
        type = bool
		isFemale = @/genderType == 1
    }
	
	DATA
	{
		type = string
		agentTitle = @/agentTitleList.Random()
		agentKerbalName = @/agentTitle + RandomKerbalName(@/isFemale ? Female : Male)
		hidden = true
		
	}	
		
	DATA
	{
		type = List<Kerbal>
		kerbalAgent = [ NewKerbal( @/isFemale ? Female : Male, @/agentKerbalName , "Civil-Servant" ) ]
		hidden = true
		
	}

// Where the medevac Kerbals are 

	DATA
	{
		type = Waypoint
		hidden = true
		crashWaypoint = @/CrashWaypointGenerator.Waypoints().ElementAt(1)
	}

	DATA
	{
		type = Location
		hidden = true
		crashLocation = @/crashWaypoint.Location()
	}
	
	DATA
	{
		type = Biome
		hidden = true
		crashBiome = @/crashLocation.Biome()
	}
	
	DATA
	{
		type = List<string>
		hidden = true
		disasterReasons = ["an epidemic","famine","a virus outbreak","kerbinquakes","a devasting fire","flooding","environmental contamination" ]
	}
	
	DATA
	{
		type = String
		hidden = true
		disasterReason = @/disasterReasons.Random()
	}


//Contract Specific VesselParameterGroup Definition Key (to prevent conflict with other active contracts)
	DATA
	{
		type = string
		craft = KSRGAPXSkyMed2
		uniquenessCheck = GROUP_ACTIVE
		hidden = true
	}


//Passenger Data
	DATA
	{
		type = int
		numPatients = 6
	
	}

	DATA
	{
		type = List<Kerbal>
		Citizens = [ NewKerbalWithTrait("Citizen"),NewKerbalWithTrait("Citizen"),NewKerbalWithTrait("Citizen"),NewKerbalWithTrait("Citizen"),NewKerbalWithTrait("Citizen"),NewKerbalWithTrait("Citizen") ]
		hidden = true 
		
	}


	DATA
	{
		type = List<Kerbal>
		kerbalsInDistress = @Citizens
		hidden = true
		
	}

// -----------------------------------------------------------------
//BEHAVIOURS TO DO WHEN CREATING CONTRACT
// -----------------------------------------------------------------
//
	//Kerbals to remove 
	BEHAVIOUR
	{
		name = RemoveKerbal
		type = RemoveKerbal
		kerbal = @/kerbalAgent.ElementAt(0)
	}

    //Spawn the Agent to go on the misssion with you
	BEHAVIOUR
	{
		name = SpawnPassengers
		type = SpawnPassengers
		
		kerbal = @/kerbalAgent.ElementAt(0)
		kerbalType = Unowned
	}

	// spawn Kerbals to Medevac
	BEHAVIOUR
	{
		name = SpawnKerbal
		type = SpawnKerbal

		KERBAL
		{
			kerbal = @/kerbalsInDistress.ElementAt(0)
			kerbalType = Unowned
			owned = false
			addToRoster = false
			lat = @/crashLocation.Latitude() + (Random(-99,99) / 100000)
			lon = @/crashLocation.Longitude() + (Random(-99,99) / 100000)
			heading = Random(0,359)
			
		}

		KERBAL
		{
			kerbal = @/kerbalsInDistress.ElementAt(1)
			kerbalType = Unowned
			owned = false
			addToRoster = false
			lat = @/crashLocation.Latitude() + (Random(-99,99) / 100000)
			lon = @/crashLocation.Longitude() + (Random(-99,99) / 100000)
			heading = Random(0,359)
			
		}
		KERBAL
		{
			kerbal = @/kerbalsInDistress.ElementAt(2)
			kerbalType = Unowned
			owned = false
			addToRoster = false
			lat = @/crashLocation.Latitude() + (Random(-99,99) / 100000)
			lon = @/crashLocation.Longitude() + (Random(-99,99) / 100000)
			heading = Random(0,359)
			
		}
		KERBAL
		{
			kerbal = @/kerbalsInDistress.ElementAt(3)
			kerbalType = Unowned
			owned = false
			addToRoster = false
			lat = @/crashLocation.Latitude() + (Random(-99,99) / 100000)
			lon = @/crashLocation.Longitude() + (Random(-99,99) / 100000)
			heading = Random(0,359)
			
		}
		KERBAL
		{
			kerbal = @/kerbalsInDistress.ElementAt(4)
			kerbalType = Unowned
			owned = false
			addToRoster = false
			lat = @/crashLocation.Latitude() + (Random(-99,99) / 100000)
			lon = @/crashLocation.Longitude() + (Random(-99,99) / 100000)
			heading = Random(0,359)
			
		}
		KERBAL
		{
			kerbal = @/kerbalsInDistress.ElementAt(5)
			kerbalType = Unowned
			owned = false
			addToRoster = false
			lat = @/crashLocation.Latitude() + (Random(-99,99) / 100000)
			lon = @/crashLocation.Longitude() + (Random(-99,99) / 100000)
			heading = Random(0,359)
			
		}
	}

// Waypoint to determine Crash zone
	BEHAVIOUR
	{
        name = CrashWaypointGenerator
        type = WaypointGenerator

		// Airstrip that the mission will be based around
		WAYPOINT
		{
			name = @KSRGAP:stripName.ElementAt(@/fltLocationSelection)
			targetBody = Kerbin
			icon = ContractPacks/KerbinSideRemasteredGAP/Assets/Icons/Airstrip
			altitude = 0
			latitude = @KSRGAP:stripLAT.ElementAt(@/fltLocationSelection)
			longitude = @KSRGAP:stripLON.ElementAt(@/fltLocationSelection)
		}
	    
		RANDOM_WAYPOINT_NEAR
		{
			name = Medevac Area
			targetBody = Kerbin
			icon = ContractPacks/KerbinSideRemasteredGAP/Assets/Icons/Medical
			nearIndex = 0
			minDistance = 15000.0 
			maxDistance = 25000.0
			waterAllowed = false
			underwater = false
			altitude = 0	
		}


		WAYPOINT
		{
			name = @KSRGAP:siteName.ElementAt(@/medevacSiteSelection) + " runway"
			targetBody = Kerbin
			icon = ContractPacks/KerbinSideRemasteredGAP/Assets/Icons/Airport
			altitude = 0
			latitude = @KSRGAP:siteLAT.ElementAt(@/medevacSiteSelection)
			longitude = @KSRGAP:siteLON.ElementAt(@/medevacSiteSelection)
		}
		
		WAYPOINT
		{
			name = @KSRGAP:siteName.ElementAt(@/medevacSiteSelection) + " Air Terminal"
			targetBody = Kerbin
			icon = ContractPacks/KerbinSideRemasteredGAP/Assets/Icons/terminal
			altitude = 0
			latitude = @KSRGAP:siteVikTerminalLAT.ElementAt(@/medevacSiteSelection)
			longitude = @KSRGAP:siteVikTerminalLON.ElementAt(@/medevacSiteSelection)
			parameter = RequestLandingMedevac
		}
	}
	
	
// Mission Dialog boxes
	BEHAVIOUR
	{
		name = DialogBox
		type = DialogBox

		DIALOG_BOX
		{
			condition = PARAMETER_COMPLETED
			parameter = Initialization
			position = CENTER
			
			TEXT
			{
				text = SkyMed, you are cleared for depature and immediate take off. Proceed to the designated airstrip and commence Medevac Operations. You will be in some pretty remote territory and there isn't any ATC guidance at the airstrip... so as always, fly safe.
				fontSize = 20
				textColor = #BADA55
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredGAP/Assets/Flags/KEMA
				characterName = KEMA Operations
			}
			
		}

		DIALOG_BOX
		{
			condition = PARAMETER_COMPLETED
			parameter = RequestLandingMedevac
			
			position = CENTER
			
			TEXT
			{
				text = SkyMed, we have you on approach. You are cleared for landing. On touchdown proceed to the indicated airport terminal. Directions have been transmited to you. Abulances will be standing by to transport your patients. 
				textColor = #BADA55
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredGAP/Assets/Flags/KEMA
				characterName = KEMA Operations
			}
			
		}
//------------------------------------------------------------------------
// Mission completed dialog	
//------------------------------------------------------------------------		
		DIALOG_BOX
		{
			condition = PARAMETER_COMPLETED
			parameter = MissionAccomplished
			
			position = CENTER
			
			TEXT
			{
				text = SkyMed mission accomplished. Medevac patients will be transported to medical facilitities for treatment. Get your aircraft stowed away. Job well done.  
				textColor = #BADA55
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredGAP/Assets/Flags/KEMA
				characterName = KEMA Operations
			}
		}
		
// failed misssion dialog
		DIALOG_BOX
		{
			condition = CONTRACT_FAILED
			position = CENTER
			title = <b>Sometimes Things Go Wrong</b>
			titleColor = #B00B1E
			
			TEXT
			{
				text = SkyMed, unfortunately the mission was not a success. This is very dissapointing.   
				fontSize = 20
				textColor = #B00B1E
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredGAP/Assets/Flags/KEMA
				characterName = KEMA Operations
			}
			BREAK
			{
			}
			TEXT
			{
				text = Start recovery operations immediately of your aircraft and the remaining passengers and crew. KEMA will be launching an investigation into this tragedy.
				fontSize = 20
				textColor = #B00B1E
			}
		}
	}

// -----------------------------------------------------------------
//PARAMETERS FOR CONTRACT COMPLETION
// -----------------------------------------------------------------
//
// -----------------------------------------------------------------
// Flight to Air strip
// -----------------------------------------------------------------
	PARAMETER
	{
		name = Initialization
		type = VesselParameterGroup
		title = Medevac mission from @KSRGAP:stripName.ElementAt(@/fltLocationSelection) to @KSRGAP:siteName.ElementAt(@/medevacSiteSelection)
		notes = You can begin from any available launch site
		define = @/craft
		completeInSequence = true

		PARAMETER
		{
			name = RequestTakeoffLaunch
			type = All
			title = Your aircraft must meet all requirements
			completeInSequence = true			

			PARAMETER
			{
				name = HasCrew
				type = HasCrew
				title = have a certified pilot
				trait = Pilot
				minCrew = 1
				disableOnStateChange = true
				hideChildren = true
			}
			
			PARAMETER
			{
				name = AdditionalCrew
				type = Any
				disableOnStateChange = true
		
				PARAMETER
				{
					name = HasCrew
					type = HasCrew
					title = have a Scientist
					trait = Scientist
					minCrew = 1
					disableOnStateChange = false
					hideChildren = true
				}

				PARAMETER:NEEDS[UmbraSpaceIndustries/MKS]
				{
					name = HasCrew
					type = HasCrew
					title = or have a Medic
					trait = Medic 
					minCrew = 1
					disableOnStateChange = false
					hideChildren = true
				}
			}		

			
			PARAMETER
			{
				title = Have @/agentKerbalName on board
				name = HasPassengers
				type = HasPassengers
				kerbal = @/kerbalAgent.ElementAt(0)
			}
					
			PARAMETER
			{
				name = RequestTakeoff
				type = Duration
				duration = 5s
				preWaitText = request clearance for takeoff:
				waitingText = requesting clearance for takeoff: 
				completionText = be cleared for takeoff
				completeInSequence = true
				disableOnStateChange = true
			}
		}
	}
	
// -----------------------------------------------------------------	
// Trip to Site2
// -----------------------------------------------------------------
	PARAMETER
	{
		name = Airstrip
		type = VesselParameterGroup
		title = complete flight to @KSRGAP:stripName.ElementAt(@/fltLocationSelection) airstrip
		vessel = @/craft
		completeInSequence = true
		
		PARAMETER
		{
			name = All
			type = All
			title = complete flight to @KSRGAP:stripName.ElementAt(@/fltLocationSelection) airstrip
			notes = land and stop within 690 meters of the Airstrip marker
			disableOnStateChange = true
			completeInSequence = true

			PARAMETER
			{
				name = VisitWaypoint
				type = VisitWaypoint
				title = land on the airstrip
				index = 0
				distance = 690
				horizontalDistance = 690
				showMessages =  true
				disableOnStateChange = false
			}
			
			PARAMETER
			{
				name = ReachState
				type = ReachState
				title = and stop your aricraft
				targetBody = Kerbin
				situation = LANDED
				maxSpeed = 0.0
				disableOnStateChange = false
				hideChildren = true
			}
		}
		
		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			title = embark the Medevac Kerbals
			notes = You will have to go and get them. 
			completeInSequence = true
			kerbal = @/kerbalsInDistress
			disableOnStateChange = true
		}
	}

// -----------------------------------------------------------------	
// Retun Trip to hospital site. 
// -----------------------------------------------------------------

	PARAMETER
	{
		name = RequestLandingMedevac
		type = VisitWaypoint
		index = 2
		distance = 19000
		hideOnCompletion = true
		completeInSequence = true
		disableOnStateChange = true
		hideChildren = true
		hidden = true
	}

	PARAMETER
	{
		name = All
		type = All
		title = complete flight to the Medevac site at @KSRGAP:siteName.ElementAt(@/medevacSiteSelection)
		notes = land and stay within 50 meters of the Air Terminal
		disableOnStateChange = true
		completeInSequence = true
		
		PARAMETER
		{
			name = MedevacTerminal
			type = VisitWaypoint
			title = then taxi to the terminal
			index = 3
			distance = 50
			horizontalDistance = 50
			showMessages =  true
			disableOnStateChange = false
		}
		PARAMETER
		{
			name = ReachState
			type = ReachState
			title = and stop your aircraft
			targetBody = Kerbin
			situation = LANDED
			maxSpeed = 0.0
			disableOnStateChange = false
			hideChildren = true
		}
		PARAMETER
		{
			name = MedevacAmbulances
			type = Duration
			
			duration = 10s
			preWaitText = wait for abulances:
			waitingText = ambulances inbound ETA: 
			completionText = ambulances have arrived  

			completeInSequence = true
			disableOnStateChange = false
		}
	}


	PARAMETER
	{
		name = MissionAccomplished
		type = All
		title = safely
		completeInSequence = true
		disableOnStateChange = true
		
		PARAMETER
		{
			name = VesselNotDestroyed
			type = VesselNotDestroyed
			title = without destroying your aircraft
			vessel = @/craft
		}
		
		PARAMETER
		{
			name = KerbalDeaths
			type = KerbalDeaths
			title = or killing anyone
			kerbal = @/kerbalAgent.ElementAt(0)
			kerbal = @/kerbalsInDistress.ElementAt(0)
			kerbal = @/kerbalsInDistress.ElementAt(1)
			kerbal = @/kerbalsInDistress.ElementAt(2)
			kerbal = @/kerbalsInDistress.ElementAt(3)
			kerbal = @/kerbalsInDistress.ElementAt(4)
			kerbal = @/kerbalsInDistress.ElementAt(5)
		}
	}
	
//Recovery Parameter - Recover Kerbals
	PARAMETER
	{
		name = All
		type = All
		title = and recover all Medevac passengers
		
		PARAMETER
		{
			name = RecoverKerbal
			type = RecoverKerbal
			title = @/kerbalsInDistress.First()
	
			ITERATOR
			{
				type = Kerbal
				kerbal = @/kerbalsInDistress	
			}
			
			hideChildren = true
			hidden = true
			
		}
	}

// -----------------------------------------------------------------
// END OF CONTRACT
// -----------------------------------------------------------------
}



	



	