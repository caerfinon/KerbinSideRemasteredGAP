// -----------------------------------------------------------------
//	CONTRACT:  KSRGAP03-CommercialFlights1 - Trans Kerbin Airlines - Trans Kerbin Airlines - Passenger flights to Open bases
//	Author: Caerfinon 
//	Credits:
//	{
//		Original GAP: Author - inigma
//		Original Kerbin side GAP: Author - Keniamin 
//		expression requirements: from from "Field Research" - Author - nightingale
//	}
// -----------------------------------------------------------------
CONTRACT_TYPE:NEEDS[KerbinSideRemasteredGapExtras]
{
//CONTRACT DESCRIPTION
	sortKey = KSRGAPX01
	name = KSRGAPX01-SkyMed-1
	title = SkyMed Flight to @KSRGAP:stripName.ElementAt(@/fltLocationSelection)
	genericTitle = Passenger flights to Open bases
	group = Trans Kerbin Airlines
	agent = Trans Kerbin Airlines

	description = medical service flight to @KSRGAP:stripName.ElementAt(@/fltLocationSelection)
	genericDescription = medical service flight to remote location
	synopsis = Fly to remote location to offer medical assistance
	completedMessage = Flight Completed!&br;&br;Medical assistance rendered

//Contract Limits
	maxCompletions = 0
	maxSimultaneous = 1
	autoAccept = false
	declinable = true
	cancellable = true
	minExpiry = 1.0
	maxExpiry = 1.0
	deadline = 2d

//Contract Reward Modifiers
	prestige = Trivial
	targetBody = Kerbin
	
//Contract Rewards

	rewardFunds = @KSRGAP:rewardBaseValue * 2 * Random(1.0,1.15)
	advanceFunds = (@/rewardFunds * 0.25 )
	rewardReputation = 2.0
    rewardScience = 0.0

//Contract Penalties
	failureFunds =  (@/rewardFunds * 1.15) * Random(1.0, 1.25)  
	failureReputation = 10 + ( @/numPatients) 
	
// -----------------------------------------------------------------	
// REQUIREMENTS FOR CONTRACT TO APPEAR
// -----------------------------------------------------------------	
//

// Requires that Flight progress in persistent storage be a value between 0 and x (depending on mods installed) 
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		title =  SkyMed Affiliation
		contractType = KSRGAPX00-SkyMedIntroduction
		minCount = 1
	}

//After mission is complete wait 7 days before offering it again	
	REQUIREMENT
	{
		title = Cool down timer 7 days
		name = CompleteContract
		type = CompleteContract
		minCount = 0
		contractType = KSRGAPX01-SkyMed-1
		cooldownDuration = 7d
	}

// -----------------------------------------------------------------	
//DATA NODES TO PROCESS FOR CONTRACT USE
// -----------------------------------------------------------------

// Pick a destination of open airports based on Flight Progression 
	DATA
	{
		type = int
		fltLocationSelection = Random(0,19)
		hidden = true
	}

//Contract Specific VesselParameterGroup Definition Key (to prevent conflict with other active contracts)
	DATA
	{
		type = string
		craft = KSRGAPXSkyMed1
		uniquenessCheck = GROUP_ACTIVE
		hidden = true
	}

//List of Possible ATC genders
	DATA
	{
		type = List<string>
		ATCGender = ["M" ,"F"]
		hidden = true
	}
	
// Merge random gender to Group siteATC type to select dialog image
	DATA
	{
		type = string
		site1ATCImage = @KSRGAP:siteATC.ElementAt(0) + @/ATCGender.Random()
		hidden = true
		
	}


//Passenger Data
	DATA
	{
		type = int
		numPatients = 2
	
	}

	DATA
	{
		type = List<Kerbal>
		Citizens = [ NewKerbalWithTrait("Citizen"),NewKerbalWithTrait("Citizen") ]
		hidden = true 
		
	}


	DATA
	{
		type = List<Kerbal>
		kerbalsInDistress = @Citizens
		hidden = true
		
	}

// -----------------------------------------------------------------
//BEHAVIOURS TO DO WHEN CREATING CONTRACT
// -----------------------------------------------------------------
//
// spawn patients
	BEHAVIOUR
	{
		name = SpawnKerbal
		type = SpawnKerbal

		KERBAL
		{
			kerbal = @/kerbalsInDistress.ElementAt(0)
			kerbalType = Unowned
			owned = false
			addToRoster = false
			lat = @/crashLocation.Latitude() + 0.00081
			lon = @/crashLocation.Longitude() + 0.00081
			alt = 0
			heading = 270
			
		}

		KERBAL
		{
			kerbal = @/kerbalsInDistress.ElementAt(1)
			kerbalType = Unowned
			owned = false
			addToRoster = false
			
			lat = @/crashLocation.Latitude() + 0.00072
			lon = @/crashLocation.Longitude() + 0.00072
			alt = 0
			heading = 350
			
		}
	}

// Waypoint to determine Crash zone
	BEHAVIOUR
	{
        name = CrashWaypointGenerator
        type = WaypointGenerator

		// Airstrip that the mission will be based around
		WAYPOINT
		{
			name = @KSRGAP:stripName.ElementAt(@/fltLocationSelection)
			targetBody = @/targetBody
			icon = ContractPacks/KerbinSideRemasteredGAP/Assets/Icons/Airstrip
			altitude = 0
			latitude = @KSRTLA:stripLAT.ElementAt(@/fltLocationSelection)
			longitude = @KSRTLA:stripLON.ElementAt(@/fltLocationSelection)
		}
	    
		RANDOM_WAYPOINT_NEAR
		{
			name = Search Area offset
			hidden = true
			targetBody = Kerbin
			nearIndex = 0
			minDistance = 15000.0 
			maxDistance = 25000.0
			waterAllowed = false
			underwater = false
			altitude = 0	
		}

		// Place the visible waypoint randomly
		RANDOM_WAYPOINT_NEAR
		{
			name = Medevac Area
			targetBody = @/targetBody
			icon = ContractPacks/KerbinSideRemasteredGAP/Assets/Icons/Medical
			underwater = true 
			altitude = -0.1
			nearIndex = 1
			minDistance = 50 
			maxDistance = 100 		
		}

		WAYPOINT
		{
			name = @KSRGAP:siteName.ElementAt(@/medevacSiteSelection)
			icon = ContractPacks/KerbinSideRemasteredGAP/Assets/Icons/Airport
			altitude = 0
			latitude = @KSRGAP:siteLAT.ElementAt(@/medevacSiteSelection)
			longitude = @KSRGAP:siteLON.ElementAt(@/medevacSiteSelection)
			
		}
		
		WAYPOINT
		{
			name = @/nameTerminal2
			icon = ContractPacks/KerbinSideRemasteredGAP/Assets/Icons/terminal
			altitude = 0
			latitude = @KSRGAP:siteVikTerminalLAT.ElementAt(@/medevacSiteSelection)
			longitude = @KSRGAP:siteVikTerminalLON.ElementAt(@/medevacSiteSelection)
			parameter = RequestLandingSite2
			
		}			

	}
	
	
// Mission Dialog boxes
	BEHAVIOUR
	{
		name = DialogBox
		type = DialogBox

		DIALOG_BOX
		{
			condition = PARAMETER_COMPLETED
			parameter = LaunchSite
			position = CENTER
			
			TEXT
			{
				text = Trans Flight, you are cleared for depature and immediate take off. Fly safe.
				fontSize = 20
				textColor = #BADA55
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredGAP/Assets/Characters/@/site1ATCImage
				characterName = KSC Air Traffic Control
			}
			
		}
		
		DIALOG_BOX
		{
			condition = PARAMETER_COMPLETED
			parameter = RequestLandingSite2
			
			position = CENTER
			
			TEXT
			{
				text = Trans Flight, we have you on approach. You are cleared for landing. On touchdown proceed to the indicated airport terminal. Directions have been transmited to you.
				fontSize = 20
				textColor = #BADA55
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredGAP/Assets/Characters/@/site2ATCImage
				characterName = Local Air Traffic Control
			}
		}
		
		DIALOG_BOX
		{
			condition = PARAMETER_COMPLETED
			parameter = RequestTakeoffSite2
			
			position = CENTER
			
			TEXT
			{
				text = Trans Flight, you are cleared for departure. Please proceed to the runway for immediate takeoff  
				fontSize = 20
				textColor = #BADA55
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredGAP/Assets/Characters/@/site2ATCImage
				characterName = Local Air Traffic Control
			}
			
		}

		DIALOG_BOX
		{
			condition = PARAMETER_COMPLETED
			parameter = RequestLandingLaunch
			
			position = CENTER
			
			TEXT
			{
				text = Trans Flight, we have you on approach. You are cleared for landing. On touchdown proceed to the indicated airport terminal. Directions have been transmited to you. Welcome back. 
				textColor = #BADA55
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredGAP/Assets/Characters/@/site1ATCImage
				characterName = KSC Air Traffic Control
			}
			
		}
//------------------------------------------------------------------------
// Mission completed dialog	
//------------------------------------------------------------------------		
		DIALOG_BOX
		{
			condition = PARAMETER_COMPLETED
			parameter = MissionAccomplished
			
			position = CENTER
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredGAP/Assets/Characters/kerbalspacecenterwelcome
			}
			BREAK
			{
			}
			TEXT
			{
				text = Ladies and gentlemen, Trans Kerbin Airlnes welcomes you to your destination. The "Fasten Seat Belt" sign has been turned off and you may now move to the terminal to collect you luggage and make connecting flights. Please use caution when opening the overhead compartments and removing items, since articles may have shifted during flight.  
				textColor = #BADA55
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredGAP/Assets/Characters/TKAArrivals
				characterName = TKA Arrivals
			}
		}
		
// failed misssion dialog
		DIALOG_BOX
		{
			condition = CONTRACT_FAILED
			position = CENTER
			title = <b>Sometimes Things Go Wrong</b>
			titleColor = #B00B1E
			
			TEXT
			{
				text = Trans Flight, Are you there? please respond. Trans Flight, we've lost you on radar, do you copy? Are you declaring an emergency?.... and you were doing so well.
				fontSize = 20
				textColor = #B00B1E
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredGAP/Assets/Characters/@/site1ATCImage
				characterName = Air Traffic Control
			}
			BREAK
			{
			}
			TEXT
			{
				text = Start recovery operations immediately of your aircraft and the remaining passengers and crew. The KAA will be launching an investigation into this tragedy.
				fontSize = 20
				textColor = #B00B1E
			}
		}
	}


// -----------------------------------------------------------------
//PARAMETERS FOR CONTRACT COMPLETION
// -----------------------------------------------------------------
//
//Craft definition
	PARAMETER
	{
		name = Initialization
		type = VesselParameterGroup
		title = Your aircraft must meet all requirements
		define = @/craft
		completeInSequence = true

		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			title = have a certified pilot
			trait = Pilot
			minCrew = 1
			disableOnStateChange = false
			hideChildren = true
		}
		
		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			title = have wings
			category = Aero
			disableOnStateChange = false
			hideChildren = true
		}
	}
	
//Launch Site
	PARAMETER
	{
		name = LaunchSite
		type = VesselParameterGroup
		title = begin the Medevac Operation
		vessel = @/craft
		completeInSequence = true
		disableOnStateChange = true
		hideVesselName = true
		
		PARAMETER
		{
			name = RequestTakeoffLaunch
			type = Duration
			duration = 5s
			preWaitText = request clearance for takeoff:
			waitingText = requesting clearance for takeoff: 
			completionText = be cleared for takeoff
			completeInSequence = true
			disableOnStateChange = true
		}
	}

// -----------------------------------------------------------------	
// Trip to Site2
// -----------------------------------------------------------------

	PARAMETER
	{
		name = RequestLandingSite2
		type = VesselParameterGroup
		vessel = @/craft
		completeInSequence = true
		disableOnStateChange = true
		hideChildren = true
		hidden = true
		
		PARAMETER
		{
			name = VisitWaypoint
			type = VisitWaypoint
			index = 2
			distance = 19000
			hideOnCompletion = true
			completeInSequence = true
			disableOnStateChange = false
			hideChildren = true
			hidden = true
		}
	}

	PARAMETER
	{
		name = LandingSite2
		type = VesselParameterGroup
		title = complete flight to @KSRGAP:stripName.ElementAt(@/fltLocationSelection) airstrip
		notes = land and stop within 100 meters of the Airstrip marker
		vessel = @/craft
		disableOnStateChange = true
		hideVesselName = true
		completeInSequence = true

		PARAMETER
		{
			name = Site2Terminal
			type = VisitWaypoint
			title = land on the airstrip
			index = 0
			distance = 100
			horizontalDistance = 100
			showMessages =  true
			disableOnStateChange = false
		}
		PARAMETER
		{
			name = ReachState
			type = ReachState
			title = and stop your aricraft
			targetBody = Kerbin
			situation = LANDED
			maxSpeed = 0.0
			disableOnStateChange = false
			hideChildren = true
		}
	}

// -----------------------------------------------------------------
// Retrieve the patients
//  - Bring them to the airstrip
//  - load them on your plane
//  - fly to medevac site
// -----------------------------------------------------------------



// -----------------------------------------------------------------	
// Retun Trip to hospital site. 
// -----------------------------------------------------------------

	PARAMETER
	{
		name = RequestLandingLaunch
		type = VesselParameterGroup
		vessel = @/craft
		completeInSequence = true
		disableOnStateChange = true
		hideChildren = true
		hidden = true
		
		PARAMETER
		{
			name = VisitWaypoint
			type = VisitWaypoint
			index = 3
			distance = 19000
			hideOnCompletion = true
			completeInSequence = true
			disableOnStateChange = false
			hideChildren = true
			hidden = true
		}
	}

	PARAMETER
	{
		name = LandingSite
		type = VesselParameterGroup
		title = complete flight to the Medevac site at @KSRGAP:siteName.ElementAt(@/medevacSiteSelection)
		notes = land and move to within 50 meters of the terminal
		vessel = @/craft
		disableOnStateChange = true
		completeInSequence = true
		hideVesselName = true

		PARAMETER
		{
			name = MedevacTerminal
			type = VisitWaypoint
			title = then taxi to the terminal
			index = 4
			distance = 50
			horizontalDistance = 50
			showMessages =  true
			disableOnStateChange = false
		}
		PARAMETER
		{
			name = ReachState
			type = ReachState
			title = and stop your aircraft
			targetBody = Kerbin
			situation = LANDED
			maxSpeed = 0.0
			disableOnStateChange = false
			hideChildren = true
		}
		PARAMETER
		{
			name = MedevacAmbukances
			type = Duration
			
			duration = 10s
			preWaitText = wait for abulances:
			waitingText = ambulances inbound ETA: 
			completionText = ambulances have arrived  

			completeInSequence = true
			disableOnStateChange = false
		}
	}

	PARAMETER
	{
		name = MissionAccomplished
		type = All
		title = safely
		completeInSequence = true
		disableOnStateChange = true
		
		PARAMETER
		{
			name = VesselNotDestroyed
			type = VesselNotDestroyed
			title = without destroying your aircraft
			vessel = @/craft
		}
		
		PARAMETER
		{
			name = KerbalDeaths
			type = KerbalDeaths
			title = or killing anyone
			vessel = @/craft
		}
	}
	
//Recovery Parameter - Recover Kerbals
	PARAMETER
	{
		name = All
		type = All
		title = and recover all @/numPassengers passengers
		
		PARAMETER
		{
			name = RecoverKerbal
			type = RecoverKerbal
			title = @kerbalsInDistress.First()
	
			ITERATOR
			{
				type = Kerbal
				kerbal = @/kerbalsInDistress	
			}
			
			hideChildren = true
			hidden = true
			
		}
	}

// -----------------------------------------------------------------
// END OF CONTRACT
// -----------------------------------------------------------------
}



	



	